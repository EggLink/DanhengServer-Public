// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueFinishInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueFinishInfo.proto</summary>
  public static partial class ChessRogueFinishInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueFinishInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueFinishInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpDaGVzc1JvZ3VlRmluaXNoSW5mby5wcm90bxoXUm9ndWVNYXplQnVmZklu",
            "Zm8ucHJvdG8aDkl0ZW1MaXN0LnByb3RvGhFJSEtLS01BSktCSy5wcm90bxoQ",
            "TGluZXVwSW5mby5wcm90bxoRSEJNT0ZIR0ZMS0wucHJvdG8aF0NoZXNzUm9n",
            "dWVNaXJhY2xlLnByb3RvIr0EChRDaGVzc1JvZ3VlRmluaXNoSW5mbxIfCgpj",
            "dXJfbGluZXVwGAUgASgLMgsuTGluZXVwSW5mbxItChFnYW1lX21pcmFjbGVf",
            "aW5mbxgCIAEoCzISLkNoZXNzUm9ndWVNaXJhY2xlEisKD3JvZ3VlX2J1ZmZf",
            "aW5mbxgHIAEoCzISLlJvZ3VlTWF6ZUJ1ZmZJbmZvEh8KF2VuZF9maW5pc2hl",
            "ZF9jZWxsX2NvdW50GAkgASgNEiEKGWNoZXNzX3JvZ3VlX21haW5fc3Rvcnlf",
            "aWQYDSABKA0SHgoLS09IUEJITUFJT0wYBCABKAsyCS5JdGVtTGlzdBIUCgxj",
            "dXJfbGF5ZXJfaWQYAyABKA0SHgoWZW5kX3JlYWNoZWRfY2VsbF9jb3VudBgG",
            "IAEoDRIRCglpc19maW5pc2gYDiABKAgSIQoLTURERVBFUE5IR0kYCyABKA4y",
            "DC5IQk1PRkhHRkxLTBIUCgtGSUROR0FFTUVCTxj5AyABKA0SEwoLRE5OTE9K",
            "T0xPS04YASABKA0SFAoLT0ZMQUZLQklJR0oYrgsgASgNEiIKC0pBTk9JREFQ",
            "Rk1HGIQJIAEoCzIMLklIS0tLTUFKS0JLEhcKDnJvZ3VlX3N1Yl9tb2RlGOAC",
            "IAEoDRIdChVhcmVhX2RpZmZpY3VsdHlfbGV2ZWwYCCABKA0SEAoIc2NvcmVf",
            "aWQYbSABKA0SEwoLRU5QR1BBTFBDREwYDyADKA0SFAoLZW5kX2FyZWFfaWQY",
            "2AYgASgNQh6qAhtFZ2dMaW5rLkRhbmhlbmdTZXJ2ZXIuUHJvdG9iBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.RogueMazeBuffInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ItemListReflection.Descriptor, global::EggLink.DanhengServer.Proto.IHKKKMAJKBKReflection.Descriptor, global::EggLink.DanhengServer.Proto.LineupInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.HBMOFHGFLKLReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueMiracleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo), global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo.Parser, new[]{ "CurLineup", "GameMiracleInfo", "RogueBuffInfo", "EndFinishedCellCount", "ChessRogueMainStoryId", "KOHPBHMAIOL", "CurLayerId", "EndReachedCellCount", "IsFinish", "MDDEPEPNHGI", "FIDNGAEMEBO", "DNNLOJOLOKN", "OFLAFKBIIGJ", "JANOIDAPFMG", "RogueSubMode", "AreaDifficultyLevel", "ScoreId", "ENPGPALPCDL", "EndAreaId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueFinishInfo : pb::IMessage<ChessRogueFinishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueFinishInfo> _parser = new pb::MessageParser<ChessRogueFinishInfo>(() => new ChessRogueFinishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueFinishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueFinishInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo(ChessRogueFinishInfo other) : this() {
      curLineup_ = other.curLineup_ != null ? other.curLineup_.Clone() : null;
      gameMiracleInfo_ = other.gameMiracleInfo_ != null ? other.gameMiracleInfo_.Clone() : null;
      rogueBuffInfo_ = other.rogueBuffInfo_ != null ? other.rogueBuffInfo_.Clone() : null;
      endFinishedCellCount_ = other.endFinishedCellCount_;
      chessRogueMainStoryId_ = other.chessRogueMainStoryId_;
      kOHPBHMAIOL_ = other.kOHPBHMAIOL_ != null ? other.kOHPBHMAIOL_.Clone() : null;
      curLayerId_ = other.curLayerId_;
      endReachedCellCount_ = other.endReachedCellCount_;
      isFinish_ = other.isFinish_;
      mDDEPEPNHGI_ = other.mDDEPEPNHGI_;
      fIDNGAEMEBO_ = other.fIDNGAEMEBO_;
      dNNLOJOLOKN_ = other.dNNLOJOLOKN_;
      oFLAFKBIIGJ_ = other.oFLAFKBIIGJ_;
      jANOIDAPFMG_ = other.jANOIDAPFMG_ != null ? other.jANOIDAPFMG_.Clone() : null;
      rogueSubMode_ = other.rogueSubMode_;
      areaDifficultyLevel_ = other.areaDifficultyLevel_;
      scoreId_ = other.scoreId_;
      eNPGPALPCDL_ = other.eNPGPALPCDL_.Clone();
      endAreaId_ = other.endAreaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo Clone() {
      return new ChessRogueFinishInfo(this);
    }

    /// <summary>Field number for the "cur_lineup" field.</summary>
    public const int CurLineupFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.LineupInfo curLineup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LineupInfo CurLineup {
      get { return curLineup_; }
      set {
        curLineup_ = value;
      }
    }

    /// <summary>Field number for the "game_miracle_info" field.</summary>
    public const int GameMiracleInfoFieldNumber = 2;
    private global::EggLink.DanhengServer.Proto.ChessRogueMiracle gameMiracleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueMiracle GameMiracleInfo {
      get { return gameMiracleInfo_; }
      set {
        gameMiracleInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_buff_info" field.</summary>
    public const int RogueBuffInfoFieldNumber = 7;
    private global::EggLink.DanhengServer.Proto.RogueMazeBuffInfo rogueBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueMazeBuffInfo RogueBuffInfo {
      get { return rogueBuffInfo_; }
      set {
        rogueBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "end_finished_cell_count" field.</summary>
    public const int EndFinishedCellCountFieldNumber = 9;
    private uint endFinishedCellCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndFinishedCellCount {
      get { return endFinishedCellCount_; }
      set {
        endFinishedCellCount_ = value;
      }
    }

    /// <summary>Field number for the "chess_rogue_main_story_id" field.</summary>
    public const int ChessRogueMainStoryIdFieldNumber = 13;
    private uint chessRogueMainStoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChessRogueMainStoryId {
      get { return chessRogueMainStoryId_; }
      set {
        chessRogueMainStoryId_ = value;
      }
    }

    /// <summary>Field number for the "KOHPBHMAIOL" field.</summary>
    public const int KOHPBHMAIOLFieldNumber = 4;
    private global::EggLink.DanhengServer.Proto.ItemList kOHPBHMAIOL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemList KOHPBHMAIOL {
      get { return kOHPBHMAIOL_; }
      set {
        kOHPBHMAIOL_ = value;
      }
    }

    /// <summary>Field number for the "cur_layer_id" field.</summary>
    public const int CurLayerIdFieldNumber = 3;
    private uint curLayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurLayerId {
      get { return curLayerId_; }
      set {
        curLayerId_ = value;
      }
    }

    /// <summary>Field number for the "end_reached_cell_count" field.</summary>
    public const int EndReachedCellCountFieldNumber = 6;
    private uint endReachedCellCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndReachedCellCount {
      get { return endReachedCellCount_; }
      set {
        endReachedCellCount_ = value;
      }
    }

    /// <summary>Field number for the "is_finish" field.</summary>
    public const int IsFinishFieldNumber = 14;
    private bool isFinish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinish {
      get { return isFinish_; }
      set {
        isFinish_ = value;
      }
    }

    /// <summary>Field number for the "MDDEPEPNHGI" field.</summary>
    public const int MDDEPEPNHGIFieldNumber = 11;
    private global::EggLink.DanhengServer.Proto.HBMOFHGFLKL mDDEPEPNHGI_ = global::EggLink.DanhengServer.Proto.HBMOFHGFLKL.ChessRogueAccountByNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.HBMOFHGFLKL MDDEPEPNHGI {
      get { return mDDEPEPNHGI_; }
      set {
        mDDEPEPNHGI_ = value;
      }
    }

    /// <summary>Field number for the "FIDNGAEMEBO" field.</summary>
    public const int FIDNGAEMEBOFieldNumber = 505;
    private uint fIDNGAEMEBO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FIDNGAEMEBO {
      get { return fIDNGAEMEBO_; }
      set {
        fIDNGAEMEBO_ = value;
      }
    }

    /// <summary>Field number for the "DNNLOJOLOKN" field.</summary>
    public const int DNNLOJOLOKNFieldNumber = 1;
    private uint dNNLOJOLOKN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DNNLOJOLOKN {
      get { return dNNLOJOLOKN_; }
      set {
        dNNLOJOLOKN_ = value;
      }
    }

    /// <summary>Field number for the "OFLAFKBIIGJ" field.</summary>
    public const int OFLAFKBIIGJFieldNumber = 1454;
    private uint oFLAFKBIIGJ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OFLAFKBIIGJ {
      get { return oFLAFKBIIGJ_; }
      set {
        oFLAFKBIIGJ_ = value;
      }
    }

    /// <summary>Field number for the "JANOIDAPFMG" field.</summary>
    public const int JANOIDAPFMGFieldNumber = 1156;
    private global::EggLink.DanhengServer.Proto.IHKKKMAJKBK jANOIDAPFMG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.IHKKKMAJKBK JANOIDAPFMG {
      get { return jANOIDAPFMG_; }
      set {
        jANOIDAPFMG_ = value;
      }
    }

    /// <summary>Field number for the "rogue_sub_mode" field.</summary>
    public const int RogueSubModeFieldNumber = 352;
    private uint rogueSubMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RogueSubMode {
      get { return rogueSubMode_; }
      set {
        rogueSubMode_ = value;
      }
    }

    /// <summary>Field number for the "area_difficulty_level" field.</summary>
    public const int AreaDifficultyLevelFieldNumber = 8;
    private uint areaDifficultyLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AreaDifficultyLevel {
      get { return areaDifficultyLevel_; }
      set {
        areaDifficultyLevel_ = value;
      }
    }

    /// <summary>Field number for the "score_id" field.</summary>
    public const int ScoreIdFieldNumber = 109;
    private uint scoreId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreId {
      get { return scoreId_; }
      set {
        scoreId_ = value;
      }
    }

    /// <summary>Field number for the "ENPGPALPCDL" field.</summary>
    public const int ENPGPALPCDLFieldNumber = 15;
    private static readonly pb::FieldCodec<uint> _repeated_eNPGPALPCDL_codec
        = pb::FieldCodec.ForUInt32(122);
    private readonly pbc::RepeatedField<uint> eNPGPALPCDL_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ENPGPALPCDL {
      get { return eNPGPALPCDL_; }
    }

    /// <summary>Field number for the "end_area_id" field.</summary>
    public const int EndAreaIdFieldNumber = 856;
    private uint endAreaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndAreaId {
      get { return endAreaId_; }
      set {
        endAreaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueFinishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueFinishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurLineup, other.CurLineup)) return false;
      if (!object.Equals(GameMiracleInfo, other.GameMiracleInfo)) return false;
      if (!object.Equals(RogueBuffInfo, other.RogueBuffInfo)) return false;
      if (EndFinishedCellCount != other.EndFinishedCellCount) return false;
      if (ChessRogueMainStoryId != other.ChessRogueMainStoryId) return false;
      if (!object.Equals(KOHPBHMAIOL, other.KOHPBHMAIOL)) return false;
      if (CurLayerId != other.CurLayerId) return false;
      if (EndReachedCellCount != other.EndReachedCellCount) return false;
      if (IsFinish != other.IsFinish) return false;
      if (MDDEPEPNHGI != other.MDDEPEPNHGI) return false;
      if (FIDNGAEMEBO != other.FIDNGAEMEBO) return false;
      if (DNNLOJOLOKN != other.DNNLOJOLOKN) return false;
      if (OFLAFKBIIGJ != other.OFLAFKBIIGJ) return false;
      if (!object.Equals(JANOIDAPFMG, other.JANOIDAPFMG)) return false;
      if (RogueSubMode != other.RogueSubMode) return false;
      if (AreaDifficultyLevel != other.AreaDifficultyLevel) return false;
      if (ScoreId != other.ScoreId) return false;
      if(!eNPGPALPCDL_.Equals(other.eNPGPALPCDL_)) return false;
      if (EndAreaId != other.EndAreaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (curLineup_ != null) hash ^= CurLineup.GetHashCode();
      if (gameMiracleInfo_ != null) hash ^= GameMiracleInfo.GetHashCode();
      if (rogueBuffInfo_ != null) hash ^= RogueBuffInfo.GetHashCode();
      if (EndFinishedCellCount != 0) hash ^= EndFinishedCellCount.GetHashCode();
      if (ChessRogueMainStoryId != 0) hash ^= ChessRogueMainStoryId.GetHashCode();
      if (kOHPBHMAIOL_ != null) hash ^= KOHPBHMAIOL.GetHashCode();
      if (CurLayerId != 0) hash ^= CurLayerId.GetHashCode();
      if (EndReachedCellCount != 0) hash ^= EndReachedCellCount.GetHashCode();
      if (IsFinish != false) hash ^= IsFinish.GetHashCode();
      if (MDDEPEPNHGI != global::EggLink.DanhengServer.Proto.HBMOFHGFLKL.ChessRogueAccountByNone) hash ^= MDDEPEPNHGI.GetHashCode();
      if (FIDNGAEMEBO != 0) hash ^= FIDNGAEMEBO.GetHashCode();
      if (DNNLOJOLOKN != 0) hash ^= DNNLOJOLOKN.GetHashCode();
      if (OFLAFKBIIGJ != 0) hash ^= OFLAFKBIIGJ.GetHashCode();
      if (jANOIDAPFMG_ != null) hash ^= JANOIDAPFMG.GetHashCode();
      if (RogueSubMode != 0) hash ^= RogueSubMode.GetHashCode();
      if (AreaDifficultyLevel != 0) hash ^= AreaDifficultyLevel.GetHashCode();
      if (ScoreId != 0) hash ^= ScoreId.GetHashCode();
      hash ^= eNPGPALPCDL_.GetHashCode();
      if (EndAreaId != 0) hash ^= EndAreaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DNNLOJOLOKN != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DNNLOJOLOKN);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GameMiracleInfo);
      }
      if (CurLayerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CurLayerId);
      }
      if (kOHPBHMAIOL_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(KOHPBHMAIOL);
      }
      if (curLineup_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CurLineup);
      }
      if (EndReachedCellCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(EndReachedCellCount);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RogueBuffInfo);
      }
      if (AreaDifficultyLevel != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AreaDifficultyLevel);
      }
      if (EndFinishedCellCount != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EndFinishedCellCount);
      }
      if (MDDEPEPNHGI != global::EggLink.DanhengServer.Proto.HBMOFHGFLKL.ChessRogueAccountByNone) {
        output.WriteRawTag(88);
        output.WriteEnum((int) MDDEPEPNHGI);
      }
      if (ChessRogueMainStoryId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ChessRogueMainStoryId);
      }
      if (IsFinish != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsFinish);
      }
      eNPGPALPCDL_.WriteTo(output, _repeated_eNPGPALPCDL_codec);
      if (ScoreId != 0) {
        output.WriteRawTag(232, 6);
        output.WriteUInt32(ScoreId);
      }
      if (RogueSubMode != 0) {
        output.WriteRawTag(128, 22);
        output.WriteUInt32(RogueSubMode);
      }
      if (FIDNGAEMEBO != 0) {
        output.WriteRawTag(200, 31);
        output.WriteUInt32(FIDNGAEMEBO);
      }
      if (EndAreaId != 0) {
        output.WriteRawTag(192, 53);
        output.WriteUInt32(EndAreaId);
      }
      if (jANOIDAPFMG_ != null) {
        output.WriteRawTag(162, 72);
        output.WriteMessage(JANOIDAPFMG);
      }
      if (OFLAFKBIIGJ != 0) {
        output.WriteRawTag(240, 90);
        output.WriteUInt32(OFLAFKBIIGJ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DNNLOJOLOKN != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DNNLOJOLOKN);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GameMiracleInfo);
      }
      if (CurLayerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CurLayerId);
      }
      if (kOHPBHMAIOL_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(KOHPBHMAIOL);
      }
      if (curLineup_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CurLineup);
      }
      if (EndReachedCellCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(EndReachedCellCount);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RogueBuffInfo);
      }
      if (AreaDifficultyLevel != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AreaDifficultyLevel);
      }
      if (EndFinishedCellCount != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EndFinishedCellCount);
      }
      if (MDDEPEPNHGI != global::EggLink.DanhengServer.Proto.HBMOFHGFLKL.ChessRogueAccountByNone) {
        output.WriteRawTag(88);
        output.WriteEnum((int) MDDEPEPNHGI);
      }
      if (ChessRogueMainStoryId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ChessRogueMainStoryId);
      }
      if (IsFinish != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsFinish);
      }
      eNPGPALPCDL_.WriteTo(ref output, _repeated_eNPGPALPCDL_codec);
      if (ScoreId != 0) {
        output.WriteRawTag(232, 6);
        output.WriteUInt32(ScoreId);
      }
      if (RogueSubMode != 0) {
        output.WriteRawTag(128, 22);
        output.WriteUInt32(RogueSubMode);
      }
      if (FIDNGAEMEBO != 0) {
        output.WriteRawTag(200, 31);
        output.WriteUInt32(FIDNGAEMEBO);
      }
      if (EndAreaId != 0) {
        output.WriteRawTag(192, 53);
        output.WriteUInt32(EndAreaId);
      }
      if (jANOIDAPFMG_ != null) {
        output.WriteRawTag(162, 72);
        output.WriteMessage(JANOIDAPFMG);
      }
      if (OFLAFKBIIGJ != 0) {
        output.WriteRawTag(240, 90);
        output.WriteUInt32(OFLAFKBIIGJ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (curLineup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurLineup);
      }
      if (gameMiracleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMiracleInfo);
      }
      if (rogueBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueBuffInfo);
      }
      if (EndFinishedCellCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndFinishedCellCount);
      }
      if (ChessRogueMainStoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChessRogueMainStoryId);
      }
      if (kOHPBHMAIOL_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KOHPBHMAIOL);
      }
      if (CurLayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurLayerId);
      }
      if (EndReachedCellCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndReachedCellCount);
      }
      if (IsFinish != false) {
        size += 1 + 1;
      }
      if (MDDEPEPNHGI != global::EggLink.DanhengServer.Proto.HBMOFHGFLKL.ChessRogueAccountByNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MDDEPEPNHGI);
      }
      if (FIDNGAEMEBO != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FIDNGAEMEBO);
      }
      if (DNNLOJOLOKN != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DNNLOJOLOKN);
      }
      if (OFLAFKBIIGJ != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OFLAFKBIIGJ);
      }
      if (jANOIDAPFMG_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(JANOIDAPFMG);
      }
      if (RogueSubMode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RogueSubMode);
      }
      if (AreaDifficultyLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaDifficultyLevel);
      }
      if (ScoreId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScoreId);
      }
      size += eNPGPALPCDL_.CalculateSize(_repeated_eNPGPALPCDL_codec);
      if (EndAreaId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EndAreaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueFinishInfo other) {
      if (other == null) {
        return;
      }
      if (other.curLineup_ != null) {
        if (curLineup_ == null) {
          CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
        }
        CurLineup.MergeFrom(other.CurLineup);
      }
      if (other.gameMiracleInfo_ != null) {
        if (gameMiracleInfo_ == null) {
          GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
        }
        GameMiracleInfo.MergeFrom(other.GameMiracleInfo);
      }
      if (other.rogueBuffInfo_ != null) {
        if (rogueBuffInfo_ == null) {
          RogueBuffInfo = new global::EggLink.DanhengServer.Proto.RogueMazeBuffInfo();
        }
        RogueBuffInfo.MergeFrom(other.RogueBuffInfo);
      }
      if (other.EndFinishedCellCount != 0) {
        EndFinishedCellCount = other.EndFinishedCellCount;
      }
      if (other.ChessRogueMainStoryId != 0) {
        ChessRogueMainStoryId = other.ChessRogueMainStoryId;
      }
      if (other.kOHPBHMAIOL_ != null) {
        if (kOHPBHMAIOL_ == null) {
          KOHPBHMAIOL = new global::EggLink.DanhengServer.Proto.ItemList();
        }
        KOHPBHMAIOL.MergeFrom(other.KOHPBHMAIOL);
      }
      if (other.CurLayerId != 0) {
        CurLayerId = other.CurLayerId;
      }
      if (other.EndReachedCellCount != 0) {
        EndReachedCellCount = other.EndReachedCellCount;
      }
      if (other.IsFinish != false) {
        IsFinish = other.IsFinish;
      }
      if (other.MDDEPEPNHGI != global::EggLink.DanhengServer.Proto.HBMOFHGFLKL.ChessRogueAccountByNone) {
        MDDEPEPNHGI = other.MDDEPEPNHGI;
      }
      if (other.FIDNGAEMEBO != 0) {
        FIDNGAEMEBO = other.FIDNGAEMEBO;
      }
      if (other.DNNLOJOLOKN != 0) {
        DNNLOJOLOKN = other.DNNLOJOLOKN;
      }
      if (other.OFLAFKBIIGJ != 0) {
        OFLAFKBIIGJ = other.OFLAFKBIIGJ;
      }
      if (other.jANOIDAPFMG_ != null) {
        if (jANOIDAPFMG_ == null) {
          JANOIDAPFMG = new global::EggLink.DanhengServer.Proto.IHKKKMAJKBK();
        }
        JANOIDAPFMG.MergeFrom(other.JANOIDAPFMG);
      }
      if (other.RogueSubMode != 0) {
        RogueSubMode = other.RogueSubMode;
      }
      if (other.AreaDifficultyLevel != 0) {
        AreaDifficultyLevel = other.AreaDifficultyLevel;
      }
      if (other.ScoreId != 0) {
        ScoreId = other.ScoreId;
      }
      eNPGPALPCDL_.Add(other.eNPGPALPCDL_);
      if (other.EndAreaId != 0) {
        EndAreaId = other.EndAreaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DNNLOJOLOKN = input.ReadUInt32();
            break;
          }
          case 18: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 24: {
            CurLayerId = input.ReadUInt32();
            break;
          }
          case 34: {
            if (kOHPBHMAIOL_ == null) {
              KOHPBHMAIOL = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(KOHPBHMAIOL);
            break;
          }
          case 42: {
            if (curLineup_ == null) {
              CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(CurLineup);
            break;
          }
          case 48: {
            EndReachedCellCount = input.ReadUInt32();
            break;
          }
          case 58: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.RogueMazeBuffInfo();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 64: {
            AreaDifficultyLevel = input.ReadUInt32();
            break;
          }
          case 72: {
            EndFinishedCellCount = input.ReadUInt32();
            break;
          }
          case 88: {
            MDDEPEPNHGI = (global::EggLink.DanhengServer.Proto.HBMOFHGFLKL) input.ReadEnum();
            break;
          }
          case 104: {
            ChessRogueMainStoryId = input.ReadUInt32();
            break;
          }
          case 112: {
            IsFinish = input.ReadBool();
            break;
          }
          case 122:
          case 120: {
            eNPGPALPCDL_.AddEntriesFrom(input, _repeated_eNPGPALPCDL_codec);
            break;
          }
          case 872: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 2816: {
            RogueSubMode = input.ReadUInt32();
            break;
          }
          case 4040: {
            FIDNGAEMEBO = input.ReadUInt32();
            break;
          }
          case 6848: {
            EndAreaId = input.ReadUInt32();
            break;
          }
          case 9250: {
            if (jANOIDAPFMG_ == null) {
              JANOIDAPFMG = new global::EggLink.DanhengServer.Proto.IHKKKMAJKBK();
            }
            input.ReadMessage(JANOIDAPFMG);
            break;
          }
          case 11632: {
            OFLAFKBIIGJ = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DNNLOJOLOKN = input.ReadUInt32();
            break;
          }
          case 18: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 24: {
            CurLayerId = input.ReadUInt32();
            break;
          }
          case 34: {
            if (kOHPBHMAIOL_ == null) {
              KOHPBHMAIOL = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(KOHPBHMAIOL);
            break;
          }
          case 42: {
            if (curLineup_ == null) {
              CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(CurLineup);
            break;
          }
          case 48: {
            EndReachedCellCount = input.ReadUInt32();
            break;
          }
          case 58: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.RogueMazeBuffInfo();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 64: {
            AreaDifficultyLevel = input.ReadUInt32();
            break;
          }
          case 72: {
            EndFinishedCellCount = input.ReadUInt32();
            break;
          }
          case 88: {
            MDDEPEPNHGI = (global::EggLink.DanhengServer.Proto.HBMOFHGFLKL) input.ReadEnum();
            break;
          }
          case 104: {
            ChessRogueMainStoryId = input.ReadUInt32();
            break;
          }
          case 112: {
            IsFinish = input.ReadBool();
            break;
          }
          case 122:
          case 120: {
            eNPGPALPCDL_.AddEntriesFrom(ref input, _repeated_eNPGPALPCDL_codec);
            break;
          }
          case 872: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 2816: {
            RogueSubMode = input.ReadUInt32();
            break;
          }
          case 4040: {
            FIDNGAEMEBO = input.ReadUInt32();
            break;
          }
          case 6848: {
            EndAreaId = input.ReadUInt32();
            break;
          }
          case 9250: {
            if (jANOIDAPFMG_ == null) {
              JANOIDAPFMG = new global::EggLink.DanhengServer.Proto.IHKKKMAJKBK();
            }
            input.ReadMessage(JANOIDAPFMG);
            break;
          }
          case 11632: {
            OFLAFKBIIGJ = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
