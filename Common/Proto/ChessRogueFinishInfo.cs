// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueFinishInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueFinishInfo.proto</summary>
  public static partial class ChessRogueFinishInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueFinishInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueFinishInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpDaGVzc1JvZ3VlRmluaXNoSW5mby5wcm90bxoXQ2hlc3NSb2d1ZU1pcmFj",
            "bGUucHJvdG8aHUNoZXNzUm9ndWVOb3VzU3RvcnlJbmZvLnByb3RvGhRDaGVz",
            "c1JvZ3VlQnVmZi5wcm90bxoQTGluZXVwSW5mby5wcm90bxoaQ2hlc3NSb2d1",
            "ZUZpbmlzaFR5cGUucHJvdG8aDkl0ZW1MaXN0LnByb3RvIrgEChRDaGVzc1Jv",
            "Z3VlRmluaXNoSW5mbxIUCgtBSVBHR0lJS0dGQhiwDiABKA0SHwoKY3VyX2xp",
            "bmV1cBgGIAEoCzILLkxpbmV1cEluZm8SEwoLRlBQQURJQU5NUE0YBSABKA0S",
            "EAoHYXJlYV9pZBj+ByABKA0SHgoLTkNHTUlOQU5QREgYCCABKAsyCS5JdGVt",
            "TGlzdBIRCghzY29yZV9pZBjbBCABKA0SIQoZY2hlc3Nfcm9ndWVfbWFpbl9z",
            "dG9yeV9pZBgNIAEoDRIUCgtBRU5HRExJUEZESxiqCyABKA0SEwoLSUlKREpH",
            "SkpDTEYYBCADKA0SMgoPbm91c19zdG9yeV9pbmZvGMAIIAEoCzIYLkNoZXNz",
            "Um9ndWVOb3VzU3RvcnlJbmZvEioKC2ZpbmlzaF90eXBlGAkgASgOMhUuQ2hl",
            "c3NSb2d1ZUZpbmlzaFR5cGUSKAoPcm9ndWVfYnVmZl9pbmZvGAIgASgLMg8u",
            "Q2hlc3NSb2d1ZUJ1ZmYSEwoLUENOUEJGSkFJSEwYCyABKAgSGQoQcm9ndWVf",
            "dmVyc2lvbl9pZBjODSABKA0SLQoRZ2FtZV9taXJhY2xlX2luZm8YDCABKAsy",
            "Ei5DaGVzc1JvZ3VlTWlyYWNsZRIYChBkaWZmaWN1bHR5X2xldmVsGA8gASgN",
            "EhMKC0lDTUlBSk1CTUFQGAEgASgNEhMKC0RORE9ISEtPR01OGA4gASgNEhQK",
            "DGN1cl9sYXllcl9pZBgHIAEoDUIeqgIbRWdnTGluay5EYW5oZW5nU2VydmVy",
            "LlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueMiracleReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueBuffReflection.Descriptor, global::EggLink.DanhengServer.Proto.LineupInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueFinishTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.ItemListReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo), global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo.Parser, new[]{ "AIPGGIIKGFB", "CurLineup", "FPPADIANMPM", "AreaId", "NCGMINANPDH", "ScoreId", "ChessRogueMainStoryId", "AENGDLIPFDK", "IIJDJGJJCLF", "NousStoryInfo", "FinishType", "RogueBuffInfo", "PCNPBFJAIHL", "RogueVersionId", "GameMiracleInfo", "DifficultyLevel", "ICMIAJMBMAP", "DNDOHHKOGMN", "CurLayerId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueFinishInfo : pb::IMessage<ChessRogueFinishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueFinishInfo> _parser = new pb::MessageParser<ChessRogueFinishInfo>(() => new ChessRogueFinishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueFinishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueFinishInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo(ChessRogueFinishInfo other) : this() {
      aIPGGIIKGFB_ = other.aIPGGIIKGFB_;
      curLineup_ = other.curLineup_ != null ? other.curLineup_.Clone() : null;
      fPPADIANMPM_ = other.fPPADIANMPM_;
      areaId_ = other.areaId_;
      nCGMINANPDH_ = other.nCGMINANPDH_ != null ? other.nCGMINANPDH_.Clone() : null;
      scoreId_ = other.scoreId_;
      chessRogueMainStoryId_ = other.chessRogueMainStoryId_;
      aENGDLIPFDK_ = other.aENGDLIPFDK_;
      iIJDJGJJCLF_ = other.iIJDJGJJCLF_.Clone();
      nousStoryInfo_ = other.nousStoryInfo_ != null ? other.nousStoryInfo_.Clone() : null;
      finishType_ = other.finishType_;
      rogueBuffInfo_ = other.rogueBuffInfo_ != null ? other.rogueBuffInfo_.Clone() : null;
      pCNPBFJAIHL_ = other.pCNPBFJAIHL_;
      rogueVersionId_ = other.rogueVersionId_;
      gameMiracleInfo_ = other.gameMiracleInfo_ != null ? other.gameMiracleInfo_.Clone() : null;
      difficultyLevel_ = other.difficultyLevel_;
      iCMIAJMBMAP_ = other.iCMIAJMBMAP_;
      dNDOHHKOGMN_ = other.dNDOHHKOGMN_;
      curLayerId_ = other.curLayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo Clone() {
      return new ChessRogueFinishInfo(this);
    }

    /// <summary>Field number for the "AIPGGIIKGFB" field.</summary>
    public const int AIPGGIIKGFBFieldNumber = 1840;
    private uint aIPGGIIKGFB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AIPGGIIKGFB {
      get { return aIPGGIIKGFB_; }
      set {
        aIPGGIIKGFB_ = value;
      }
    }

    /// <summary>Field number for the "cur_lineup" field.</summary>
    public const int CurLineupFieldNumber = 6;
    private global::EggLink.DanhengServer.Proto.LineupInfo curLineup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LineupInfo CurLineup {
      get { return curLineup_; }
      set {
        curLineup_ = value;
      }
    }

    /// <summary>Field number for the "FPPADIANMPM" field.</summary>
    public const int FPPADIANMPMFieldNumber = 5;
    private uint fPPADIANMPM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FPPADIANMPM {
      get { return fPPADIANMPM_; }
      set {
        fPPADIANMPM_ = value;
      }
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 1022;
    private uint areaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "NCGMINANPDH" field.</summary>
    public const int NCGMINANPDHFieldNumber = 8;
    private global::EggLink.DanhengServer.Proto.ItemList nCGMINANPDH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemList NCGMINANPDH {
      get { return nCGMINANPDH_; }
      set {
        nCGMINANPDH_ = value;
      }
    }

    /// <summary>Field number for the "score_id" field.</summary>
    public const int ScoreIdFieldNumber = 603;
    private uint scoreId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreId {
      get { return scoreId_; }
      set {
        scoreId_ = value;
      }
    }

    /// <summary>Field number for the "chess_rogue_main_story_id" field.</summary>
    public const int ChessRogueMainStoryIdFieldNumber = 13;
    private uint chessRogueMainStoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChessRogueMainStoryId {
      get { return chessRogueMainStoryId_; }
      set {
        chessRogueMainStoryId_ = value;
      }
    }

    /// <summary>Field number for the "AENGDLIPFDK" field.</summary>
    public const int AENGDLIPFDKFieldNumber = 1450;
    private uint aENGDLIPFDK_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AENGDLIPFDK {
      get { return aENGDLIPFDK_; }
      set {
        aENGDLIPFDK_ = value;
      }
    }

    /// <summary>Field number for the "IIJDJGJJCLF" field.</summary>
    public const int IIJDJGJJCLFFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_iIJDJGJJCLF_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> iIJDJGJJCLF_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> IIJDJGJJCLF {
      get { return iIJDJGJJCLF_; }
    }

    /// <summary>Field number for the "nous_story_info" field.</summary>
    public const int NousStoryInfoFieldNumber = 1088;
    private global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo nousStoryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo NousStoryInfo {
      get { return nousStoryInfo_; }
      set {
        nousStoryInfo_ = value;
      }
    }

    /// <summary>Field number for the "finish_type" field.</summary>
    public const int FinishTypeFieldNumber = 9;
    private global::EggLink.DanhengServer.Proto.ChessRogueFinishType finishType_ = global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueFinishType FinishType {
      get { return finishType_; }
      set {
        finishType_ = value;
      }
    }

    /// <summary>Field number for the "rogue_buff_info" field.</summary>
    public const int RogueBuffInfoFieldNumber = 2;
    private global::EggLink.DanhengServer.Proto.ChessRogueBuff rogueBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueBuff RogueBuffInfo {
      get { return rogueBuffInfo_; }
      set {
        rogueBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "PCNPBFJAIHL" field.</summary>
    public const int PCNPBFJAIHLFieldNumber = 11;
    private bool pCNPBFJAIHL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PCNPBFJAIHL {
      get { return pCNPBFJAIHL_; }
      set {
        pCNPBFJAIHL_ = value;
      }
    }

    /// <summary>Field number for the "rogue_version_id" field.</summary>
    public const int RogueVersionIdFieldNumber = 1742;
    private uint rogueVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RogueVersionId {
      get { return rogueVersionId_; }
      set {
        rogueVersionId_ = value;
      }
    }

    /// <summary>Field number for the "game_miracle_info" field.</summary>
    public const int GameMiracleInfoFieldNumber = 12;
    private global::EggLink.DanhengServer.Proto.ChessRogueMiracle gameMiracleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueMiracle GameMiracleInfo {
      get { return gameMiracleInfo_; }
      set {
        gameMiracleInfo_ = value;
      }
    }

    /// <summary>Field number for the "difficulty_level" field.</summary>
    public const int DifficultyLevelFieldNumber = 15;
    private uint difficultyLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DifficultyLevel {
      get { return difficultyLevel_; }
      set {
        difficultyLevel_ = value;
      }
    }

    /// <summary>Field number for the "ICMIAJMBMAP" field.</summary>
    public const int ICMIAJMBMAPFieldNumber = 1;
    private uint iCMIAJMBMAP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ICMIAJMBMAP {
      get { return iCMIAJMBMAP_; }
      set {
        iCMIAJMBMAP_ = value;
      }
    }

    /// <summary>Field number for the "DNDOHHKOGMN" field.</summary>
    public const int DNDOHHKOGMNFieldNumber = 14;
    private uint dNDOHHKOGMN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DNDOHHKOGMN {
      get { return dNDOHHKOGMN_; }
      set {
        dNDOHHKOGMN_ = value;
      }
    }

    /// <summary>Field number for the "cur_layer_id" field.</summary>
    public const int CurLayerIdFieldNumber = 7;
    private uint curLayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurLayerId {
      get { return curLayerId_; }
      set {
        curLayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueFinishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueFinishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AIPGGIIKGFB != other.AIPGGIIKGFB) return false;
      if (!object.Equals(CurLineup, other.CurLineup)) return false;
      if (FPPADIANMPM != other.FPPADIANMPM) return false;
      if (AreaId != other.AreaId) return false;
      if (!object.Equals(NCGMINANPDH, other.NCGMINANPDH)) return false;
      if (ScoreId != other.ScoreId) return false;
      if (ChessRogueMainStoryId != other.ChessRogueMainStoryId) return false;
      if (AENGDLIPFDK != other.AENGDLIPFDK) return false;
      if(!iIJDJGJJCLF_.Equals(other.iIJDJGJJCLF_)) return false;
      if (!object.Equals(NousStoryInfo, other.NousStoryInfo)) return false;
      if (FinishType != other.FinishType) return false;
      if (!object.Equals(RogueBuffInfo, other.RogueBuffInfo)) return false;
      if (PCNPBFJAIHL != other.PCNPBFJAIHL) return false;
      if (RogueVersionId != other.RogueVersionId) return false;
      if (!object.Equals(GameMiracleInfo, other.GameMiracleInfo)) return false;
      if (DifficultyLevel != other.DifficultyLevel) return false;
      if (ICMIAJMBMAP != other.ICMIAJMBMAP) return false;
      if (DNDOHHKOGMN != other.DNDOHHKOGMN) return false;
      if (CurLayerId != other.CurLayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AIPGGIIKGFB != 0) hash ^= AIPGGIIKGFB.GetHashCode();
      if (curLineup_ != null) hash ^= CurLineup.GetHashCode();
      if (FPPADIANMPM != 0) hash ^= FPPADIANMPM.GetHashCode();
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (nCGMINANPDH_ != null) hash ^= NCGMINANPDH.GetHashCode();
      if (ScoreId != 0) hash ^= ScoreId.GetHashCode();
      if (ChessRogueMainStoryId != 0) hash ^= ChessRogueMainStoryId.GetHashCode();
      if (AENGDLIPFDK != 0) hash ^= AENGDLIPFDK.GetHashCode();
      hash ^= iIJDJGJJCLF_.GetHashCode();
      if (nousStoryInfo_ != null) hash ^= NousStoryInfo.GetHashCode();
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) hash ^= FinishType.GetHashCode();
      if (rogueBuffInfo_ != null) hash ^= RogueBuffInfo.GetHashCode();
      if (PCNPBFJAIHL != false) hash ^= PCNPBFJAIHL.GetHashCode();
      if (RogueVersionId != 0) hash ^= RogueVersionId.GetHashCode();
      if (gameMiracleInfo_ != null) hash ^= GameMiracleInfo.GetHashCode();
      if (DifficultyLevel != 0) hash ^= DifficultyLevel.GetHashCode();
      if (ICMIAJMBMAP != 0) hash ^= ICMIAJMBMAP.GetHashCode();
      if (DNDOHHKOGMN != 0) hash ^= DNDOHHKOGMN.GetHashCode();
      if (CurLayerId != 0) hash ^= CurLayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ICMIAJMBMAP != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ICMIAJMBMAP);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RogueBuffInfo);
      }
      iIJDJGJJCLF_.WriteTo(output, _repeated_iIJDJGJJCLF_codec);
      if (FPPADIANMPM != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FPPADIANMPM);
      }
      if (curLineup_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CurLineup);
      }
      if (CurLayerId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(CurLayerId);
      }
      if (nCGMINANPDH_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(NCGMINANPDH);
      }
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        output.WriteRawTag(72);
        output.WriteEnum((int) FinishType);
      }
      if (PCNPBFJAIHL != false) {
        output.WriteRawTag(88);
        output.WriteBool(PCNPBFJAIHL);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GameMiracleInfo);
      }
      if (ChessRogueMainStoryId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ChessRogueMainStoryId);
      }
      if (DNDOHHKOGMN != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(DNDOHHKOGMN);
      }
      if (DifficultyLevel != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(DifficultyLevel);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(216, 37);
        output.WriteUInt32(ScoreId);
      }
      if (AreaId != 0) {
        output.WriteRawTag(240, 63);
        output.WriteUInt32(AreaId);
      }
      if (nousStoryInfo_ != null) {
        output.WriteRawTag(130, 68);
        output.WriteMessage(NousStoryInfo);
      }
      if (AENGDLIPFDK != 0) {
        output.WriteRawTag(208, 90);
        output.WriteUInt32(AENGDLIPFDK);
      }
      if (RogueVersionId != 0) {
        output.WriteRawTag(240, 108);
        output.WriteUInt32(RogueVersionId);
      }
      if (AIPGGIIKGFB != 0) {
        output.WriteRawTag(128, 115);
        output.WriteUInt32(AIPGGIIKGFB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ICMIAJMBMAP != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ICMIAJMBMAP);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RogueBuffInfo);
      }
      iIJDJGJJCLF_.WriteTo(ref output, _repeated_iIJDJGJJCLF_codec);
      if (FPPADIANMPM != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FPPADIANMPM);
      }
      if (curLineup_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CurLineup);
      }
      if (CurLayerId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(CurLayerId);
      }
      if (nCGMINANPDH_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(NCGMINANPDH);
      }
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        output.WriteRawTag(72);
        output.WriteEnum((int) FinishType);
      }
      if (PCNPBFJAIHL != false) {
        output.WriteRawTag(88);
        output.WriteBool(PCNPBFJAIHL);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GameMiracleInfo);
      }
      if (ChessRogueMainStoryId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ChessRogueMainStoryId);
      }
      if (DNDOHHKOGMN != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(DNDOHHKOGMN);
      }
      if (DifficultyLevel != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(DifficultyLevel);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(216, 37);
        output.WriteUInt32(ScoreId);
      }
      if (AreaId != 0) {
        output.WriteRawTag(240, 63);
        output.WriteUInt32(AreaId);
      }
      if (nousStoryInfo_ != null) {
        output.WriteRawTag(130, 68);
        output.WriteMessage(NousStoryInfo);
      }
      if (AENGDLIPFDK != 0) {
        output.WriteRawTag(208, 90);
        output.WriteUInt32(AENGDLIPFDK);
      }
      if (RogueVersionId != 0) {
        output.WriteRawTag(240, 108);
        output.WriteUInt32(RogueVersionId);
      }
      if (AIPGGIIKGFB != 0) {
        output.WriteRawTag(128, 115);
        output.WriteUInt32(AIPGGIIKGFB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AIPGGIIKGFB != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AIPGGIIKGFB);
      }
      if (curLineup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurLineup);
      }
      if (FPPADIANMPM != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FPPADIANMPM);
      }
      if (AreaId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AreaId);
      }
      if (nCGMINANPDH_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NCGMINANPDH);
      }
      if (ScoreId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScoreId);
      }
      if (ChessRogueMainStoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChessRogueMainStoryId);
      }
      if (AENGDLIPFDK != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AENGDLIPFDK);
      }
      size += iIJDJGJJCLF_.CalculateSize(_repeated_iIJDJGJJCLF_codec);
      if (nousStoryInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NousStoryInfo);
      }
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FinishType);
      }
      if (rogueBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueBuffInfo);
      }
      if (PCNPBFJAIHL != false) {
        size += 1 + 1;
      }
      if (RogueVersionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RogueVersionId);
      }
      if (gameMiracleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMiracleInfo);
      }
      if (DifficultyLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DifficultyLevel);
      }
      if (ICMIAJMBMAP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ICMIAJMBMAP);
      }
      if (DNDOHHKOGMN != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DNDOHHKOGMN);
      }
      if (CurLayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurLayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueFinishInfo other) {
      if (other == null) {
        return;
      }
      if (other.AIPGGIIKGFB != 0) {
        AIPGGIIKGFB = other.AIPGGIIKGFB;
      }
      if (other.curLineup_ != null) {
        if (curLineup_ == null) {
          CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
        }
        CurLineup.MergeFrom(other.CurLineup);
      }
      if (other.FPPADIANMPM != 0) {
        FPPADIANMPM = other.FPPADIANMPM;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.nCGMINANPDH_ != null) {
        if (nCGMINANPDH_ == null) {
          NCGMINANPDH = new global::EggLink.DanhengServer.Proto.ItemList();
        }
        NCGMINANPDH.MergeFrom(other.NCGMINANPDH);
      }
      if (other.ScoreId != 0) {
        ScoreId = other.ScoreId;
      }
      if (other.ChessRogueMainStoryId != 0) {
        ChessRogueMainStoryId = other.ChessRogueMainStoryId;
      }
      if (other.AENGDLIPFDK != 0) {
        AENGDLIPFDK = other.AENGDLIPFDK;
      }
      iIJDJGJJCLF_.Add(other.iIJDJGJJCLF_);
      if (other.nousStoryInfo_ != null) {
        if (nousStoryInfo_ == null) {
          NousStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo();
        }
        NousStoryInfo.MergeFrom(other.NousStoryInfo);
      }
      if (other.FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        FinishType = other.FinishType;
      }
      if (other.rogueBuffInfo_ != null) {
        if (rogueBuffInfo_ == null) {
          RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
        }
        RogueBuffInfo.MergeFrom(other.RogueBuffInfo);
      }
      if (other.PCNPBFJAIHL != false) {
        PCNPBFJAIHL = other.PCNPBFJAIHL;
      }
      if (other.RogueVersionId != 0) {
        RogueVersionId = other.RogueVersionId;
      }
      if (other.gameMiracleInfo_ != null) {
        if (gameMiracleInfo_ == null) {
          GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
        }
        GameMiracleInfo.MergeFrom(other.GameMiracleInfo);
      }
      if (other.DifficultyLevel != 0) {
        DifficultyLevel = other.DifficultyLevel;
      }
      if (other.ICMIAJMBMAP != 0) {
        ICMIAJMBMAP = other.ICMIAJMBMAP;
      }
      if (other.DNDOHHKOGMN != 0) {
        DNDOHHKOGMN = other.DNDOHHKOGMN;
      }
      if (other.CurLayerId != 0) {
        CurLayerId = other.CurLayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ICMIAJMBMAP = input.ReadUInt32();
            break;
          }
          case 18: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 34:
          case 32: {
            iIJDJGJJCLF_.AddEntriesFrom(input, _repeated_iIJDJGJJCLF_codec);
            break;
          }
          case 40: {
            FPPADIANMPM = input.ReadUInt32();
            break;
          }
          case 50: {
            if (curLineup_ == null) {
              CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(CurLineup);
            break;
          }
          case 56: {
            CurLayerId = input.ReadUInt32();
            break;
          }
          case 66: {
            if (nCGMINANPDH_ == null) {
              NCGMINANPDH = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(NCGMINANPDH);
            break;
          }
          case 72: {
            FinishType = (global::EggLink.DanhengServer.Proto.ChessRogueFinishType) input.ReadEnum();
            break;
          }
          case 88: {
            PCNPBFJAIHL = input.ReadBool();
            break;
          }
          case 98: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 104: {
            ChessRogueMainStoryId = input.ReadUInt32();
            break;
          }
          case 112: {
            DNDOHHKOGMN = input.ReadUInt32();
            break;
          }
          case 120: {
            DifficultyLevel = input.ReadUInt32();
            break;
          }
          case 4824: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 8176: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 8706: {
            if (nousStoryInfo_ == null) {
              NousStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo();
            }
            input.ReadMessage(NousStoryInfo);
            break;
          }
          case 11600: {
            AENGDLIPFDK = input.ReadUInt32();
            break;
          }
          case 13936: {
            RogueVersionId = input.ReadUInt32();
            break;
          }
          case 14720: {
            AIPGGIIKGFB = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ICMIAJMBMAP = input.ReadUInt32();
            break;
          }
          case 18: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 34:
          case 32: {
            iIJDJGJJCLF_.AddEntriesFrom(ref input, _repeated_iIJDJGJJCLF_codec);
            break;
          }
          case 40: {
            FPPADIANMPM = input.ReadUInt32();
            break;
          }
          case 50: {
            if (curLineup_ == null) {
              CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(CurLineup);
            break;
          }
          case 56: {
            CurLayerId = input.ReadUInt32();
            break;
          }
          case 66: {
            if (nCGMINANPDH_ == null) {
              NCGMINANPDH = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(NCGMINANPDH);
            break;
          }
          case 72: {
            FinishType = (global::EggLink.DanhengServer.Proto.ChessRogueFinishType) input.ReadEnum();
            break;
          }
          case 88: {
            PCNPBFJAIHL = input.ReadBool();
            break;
          }
          case 98: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 104: {
            ChessRogueMainStoryId = input.ReadUInt32();
            break;
          }
          case 112: {
            DNDOHHKOGMN = input.ReadUInt32();
            break;
          }
          case 120: {
            DifficultyLevel = input.ReadUInt32();
            break;
          }
          case 4824: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 8176: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 8706: {
            if (nousStoryInfo_ == null) {
              NousStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo();
            }
            input.ReadMessage(NousStoryInfo);
            break;
          }
          case 11600: {
            AENGDLIPFDK = input.ReadUInt32();
            break;
          }
          case 13936: {
            RogueVersionId = input.ReadUInt32();
            break;
          }
          case 14720: {
            AIPGGIIKGFB = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
