// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SceneBattleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from SceneBattleInfo.proto</summary>
  public static partial class SceneBattleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for SceneBattleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneBattleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVTY2VuZUJhdHRsZUluZm8ucHJvdG8aFlNjZW5lTW9uc3RlcldhdmUucHJv",
            "dG8aG0V2b2x2ZUJ1aWxkQmF0dGxlSW5mby5wcm90bxoRUExKS1BJQ0hBSlAu",
            "cHJvdG8aG0JhdHRsZUV2ZW50QmF0dGxlSW5mby5wcm90bxoWQmF0dGxlVGFy",
            "Z2V0TGlzdC5wcm90bxoSQmF0dGxlQXZhdGFyLnByb3RvGhBCYXR0bGVCdWZm",
            "LnByb3RvIrEECg9TY2VuZUJhdHRsZUluZm8SEwoLSEtMRUtHSUJFQ0gYCyAB",
            "KA0SEQoJYmF0dGxlX2lkGAMgASgNEi0KDGJhdHRsZV9ldmVudBibCSADKAsy",
            "Fi5CYXR0bGVFdmVudEJhdHRsZUluZm8SKQoSYmF0dGxlX2F2YXRhcl9saXN0",
            "GA4gAygLMg0uQmF0dGxlQXZhdGFyEiwKC0ZFTUxPSUlQSE9QGJMOIAEoCzIW",
            "LkV2b2x2ZUJ1aWxkQmF0dGxlSW5mbxITCgtJRkRNRUNKT0dQShgPIAEoCBIe",
            "CglidWZmX2xpc3QYDCADKAsyCy5CYXR0bGVCdWZmEiIKC0lLSUpOSk9QTU9C",
            "GJYIIAEoCzIMLlBMSktQSUNIQUpQEhkKEWxvZ2ljX3JhbmRvbV9zZWVkGAkg",
            "ASgNEhQKDHJvdW5kc19saW1pdBgFIAEoDRIsChFtb25zdGVyX3dhdmVfbGlz",
            "dBgKIAMoCzIRLlNjZW5lTW9uc3RlcldhdmUSEAoIc3RhZ2VfaWQYASABKA0S",
            "EwoLd29ybGRfbGV2ZWwYAiABKA0SQwoSYmF0dGxlX3RhcmdldF9pbmZvGJkL",
            "IAMoCzImLlNjZW5lQmF0dGxlSW5mby5CYXR0bGVUYXJnZXRJbmZvRW50cnka",
            "SgoVQmF0dGxlVGFyZ2V0SW5mb0VudHJ5EgsKA2tleRgBIAEoDRIgCgV2YWx1",
            "ZRgCIAEoCzIRLkJhdHRsZVRhcmdldExpc3Q6AjgBQh6qAhtFZ2dMaW5rLkRh",
            "bmhlbmdTZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.SceneMonsterWaveReflection.Descriptor, global::EggLink.DanhengServer.Proto.EvolveBuildBattleInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.PLJKPICHAJPReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleEventBattleInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleTargetListReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleAvatarReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleBuffReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.SceneBattleInfo), global::EggLink.DanhengServer.Proto.SceneBattleInfo.Parser, new[]{ "HKLEKGIBECH", "BattleId", "BattleEvent", "BattleAvatarList", "FEMLOIIPHOP", "IFDMECJOGPJ", "BuffList", "IKIJNJOPMOB", "LogicRandomSeed", "RoundsLimit", "MonsterWaveList", "StageId", "WorldLevel", "BattleTargetInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SceneBattleInfo : pb::IMessage<SceneBattleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SceneBattleInfo> _parser = new pb::MessageParser<SceneBattleInfo>(() => new SceneBattleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SceneBattleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.SceneBattleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneBattleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneBattleInfo(SceneBattleInfo other) : this() {
      hKLEKGIBECH_ = other.hKLEKGIBECH_;
      battleId_ = other.battleId_;
      battleEvent_ = other.battleEvent_.Clone();
      battleAvatarList_ = other.battleAvatarList_.Clone();
      fEMLOIIPHOP_ = other.fEMLOIIPHOP_ != null ? other.fEMLOIIPHOP_.Clone() : null;
      iFDMECJOGPJ_ = other.iFDMECJOGPJ_;
      buffList_ = other.buffList_.Clone();
      iKIJNJOPMOB_ = other.iKIJNJOPMOB_ != null ? other.iKIJNJOPMOB_.Clone() : null;
      logicRandomSeed_ = other.logicRandomSeed_;
      roundsLimit_ = other.roundsLimit_;
      monsterWaveList_ = other.monsterWaveList_.Clone();
      stageId_ = other.stageId_;
      worldLevel_ = other.worldLevel_;
      battleTargetInfo_ = other.battleTargetInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneBattleInfo Clone() {
      return new SceneBattleInfo(this);
    }

    /// <summary>Field number for the "HKLEKGIBECH" field.</summary>
    public const int HKLEKGIBECHFieldNumber = 11;
    private uint hKLEKGIBECH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HKLEKGIBECH {
      get { return hKLEKGIBECH_; }
      set {
        hKLEKGIBECH_ = value;
      }
    }

    /// <summary>Field number for the "battle_id" field.</summary>
    public const int BattleIdFieldNumber = 3;
    private uint battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    /// <summary>Field number for the "battle_event" field.</summary>
    public const int BattleEventFieldNumber = 1179;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.BattleEventBattleInfo> _repeated_battleEvent_codec
        = pb::FieldCodec.ForMessage(9434, global::EggLink.DanhengServer.Proto.BattleEventBattleInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleEventBattleInfo> battleEvent_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleEventBattleInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleEventBattleInfo> BattleEvent {
      get { return battleEvent_; }
    }

    /// <summary>Field number for the "battle_avatar_list" field.</summary>
    public const int BattleAvatarListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.BattleAvatar> _repeated_battleAvatarList_codec
        = pb::FieldCodec.ForMessage(114, global::EggLink.DanhengServer.Proto.BattleAvatar.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleAvatar> battleAvatarList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleAvatar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleAvatar> BattleAvatarList {
      get { return battleAvatarList_; }
    }

    /// <summary>Field number for the "FEMLOIIPHOP" field.</summary>
    public const int FEMLOIIPHOPFieldNumber = 1811;
    private global::EggLink.DanhengServer.Proto.EvolveBuildBattleInfo fEMLOIIPHOP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.EvolveBuildBattleInfo FEMLOIIPHOP {
      get { return fEMLOIIPHOP_; }
      set {
        fEMLOIIPHOP_ = value;
      }
    }

    /// <summary>Field number for the "IFDMECJOGPJ" field.</summary>
    public const int IFDMECJOGPJFieldNumber = 15;
    private bool iFDMECJOGPJ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IFDMECJOGPJ {
      get { return iFDMECJOGPJ_; }
      set {
        iFDMECJOGPJ_ = value;
      }
    }

    /// <summary>Field number for the "buff_list" field.</summary>
    public const int BuffListFieldNumber = 12;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.BattleBuff> _repeated_buffList_codec
        = pb::FieldCodec.ForMessage(98, global::EggLink.DanhengServer.Proto.BattleBuff.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleBuff> buffList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleBuff> BuffList {
      get { return buffList_; }
    }

    /// <summary>Field number for the "IKIJNJOPMOB" field.</summary>
    public const int IKIJNJOPMOBFieldNumber = 1046;
    private global::EggLink.DanhengServer.Proto.PLJKPICHAJP iKIJNJOPMOB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.PLJKPICHAJP IKIJNJOPMOB {
      get { return iKIJNJOPMOB_; }
      set {
        iKIJNJOPMOB_ = value;
      }
    }

    /// <summary>Field number for the "logic_random_seed" field.</summary>
    public const int LogicRandomSeedFieldNumber = 9;
    private uint logicRandomSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LogicRandomSeed {
      get { return logicRandomSeed_; }
      set {
        logicRandomSeed_ = value;
      }
    }

    /// <summary>Field number for the "rounds_limit" field.</summary>
    public const int RoundsLimitFieldNumber = 5;
    private uint roundsLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RoundsLimit {
      get { return roundsLimit_; }
      set {
        roundsLimit_ = value;
      }
    }

    /// <summary>Field number for the "monster_wave_list" field.</summary>
    public const int MonsterWaveListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.SceneMonsterWave> _repeated_monsterWaveList_codec
        = pb::FieldCodec.ForMessage(82, global::EggLink.DanhengServer.Proto.SceneMonsterWave.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SceneMonsterWave> monsterWaveList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SceneMonsterWave>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SceneMonsterWave> MonsterWaveList {
      get { return monsterWaveList_; }
    }

    /// <summary>Field number for the "stage_id" field.</summary>
    public const int StageIdFieldNumber = 1;
    private uint stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "world_level" field.</summary>
    public const int WorldLevelFieldNumber = 2;
    private uint worldLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WorldLevel {
      get { return worldLevel_; }
      set {
        worldLevel_ = value;
      }
    }

    /// <summary>Field number for the "battle_target_info" field.</summary>
    public const int BattleTargetInfoFieldNumber = 1433;
    private static readonly pbc::MapField<uint, global::EggLink.DanhengServer.Proto.BattleTargetList>.Codec _map_battleTargetInfo_codec
        = new pbc::MapField<uint, global::EggLink.DanhengServer.Proto.BattleTargetList>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::EggLink.DanhengServer.Proto.BattleTargetList.Parser), 11466);
    private readonly pbc::MapField<uint, global::EggLink.DanhengServer.Proto.BattleTargetList> battleTargetInfo_ = new pbc::MapField<uint, global::EggLink.DanhengServer.Proto.BattleTargetList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::EggLink.DanhengServer.Proto.BattleTargetList> BattleTargetInfo {
      get { return battleTargetInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SceneBattleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SceneBattleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HKLEKGIBECH != other.HKLEKGIBECH) return false;
      if (BattleId != other.BattleId) return false;
      if(!battleEvent_.Equals(other.battleEvent_)) return false;
      if(!battleAvatarList_.Equals(other.battleAvatarList_)) return false;
      if (!object.Equals(FEMLOIIPHOP, other.FEMLOIIPHOP)) return false;
      if (IFDMECJOGPJ != other.IFDMECJOGPJ) return false;
      if(!buffList_.Equals(other.buffList_)) return false;
      if (!object.Equals(IKIJNJOPMOB, other.IKIJNJOPMOB)) return false;
      if (LogicRandomSeed != other.LogicRandomSeed) return false;
      if (RoundsLimit != other.RoundsLimit) return false;
      if(!monsterWaveList_.Equals(other.monsterWaveList_)) return false;
      if (StageId != other.StageId) return false;
      if (WorldLevel != other.WorldLevel) return false;
      if (!BattleTargetInfo.Equals(other.BattleTargetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HKLEKGIBECH != 0) hash ^= HKLEKGIBECH.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      hash ^= battleEvent_.GetHashCode();
      hash ^= battleAvatarList_.GetHashCode();
      if (fEMLOIIPHOP_ != null) hash ^= FEMLOIIPHOP.GetHashCode();
      if (IFDMECJOGPJ != false) hash ^= IFDMECJOGPJ.GetHashCode();
      hash ^= buffList_.GetHashCode();
      if (iKIJNJOPMOB_ != null) hash ^= IKIJNJOPMOB.GetHashCode();
      if (LogicRandomSeed != 0) hash ^= LogicRandomSeed.GetHashCode();
      if (RoundsLimit != 0) hash ^= RoundsLimit.GetHashCode();
      hash ^= monsterWaveList_.GetHashCode();
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (WorldLevel != 0) hash ^= WorldLevel.GetHashCode();
      hash ^= BattleTargetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StageId);
      }
      if (WorldLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(WorldLevel);
      }
      if (BattleId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BattleId);
      }
      if (RoundsLimit != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RoundsLimit);
      }
      if (LogicRandomSeed != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(LogicRandomSeed);
      }
      monsterWaveList_.WriteTo(output, _repeated_monsterWaveList_codec);
      if (HKLEKGIBECH != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(HKLEKGIBECH);
      }
      buffList_.WriteTo(output, _repeated_buffList_codec);
      battleAvatarList_.WriteTo(output, _repeated_battleAvatarList_codec);
      if (IFDMECJOGPJ != false) {
        output.WriteRawTag(120);
        output.WriteBool(IFDMECJOGPJ);
      }
      if (iKIJNJOPMOB_ != null) {
        output.WriteRawTag(178, 65);
        output.WriteMessage(IKIJNJOPMOB);
      }
      battleEvent_.WriteTo(output, _repeated_battleEvent_codec);
      battleTargetInfo_.WriteTo(output, _map_battleTargetInfo_codec);
      if (fEMLOIIPHOP_ != null) {
        output.WriteRawTag(154, 113);
        output.WriteMessage(FEMLOIIPHOP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StageId);
      }
      if (WorldLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(WorldLevel);
      }
      if (BattleId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BattleId);
      }
      if (RoundsLimit != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RoundsLimit);
      }
      if (LogicRandomSeed != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(LogicRandomSeed);
      }
      monsterWaveList_.WriteTo(ref output, _repeated_monsterWaveList_codec);
      if (HKLEKGIBECH != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(HKLEKGIBECH);
      }
      buffList_.WriteTo(ref output, _repeated_buffList_codec);
      battleAvatarList_.WriteTo(ref output, _repeated_battleAvatarList_codec);
      if (IFDMECJOGPJ != false) {
        output.WriteRawTag(120);
        output.WriteBool(IFDMECJOGPJ);
      }
      if (iKIJNJOPMOB_ != null) {
        output.WriteRawTag(178, 65);
        output.WriteMessage(IKIJNJOPMOB);
      }
      battleEvent_.WriteTo(ref output, _repeated_battleEvent_codec);
      battleTargetInfo_.WriteTo(ref output, _map_battleTargetInfo_codec);
      if (fEMLOIIPHOP_ != null) {
        output.WriteRawTag(154, 113);
        output.WriteMessage(FEMLOIIPHOP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HKLEKGIBECH != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HKLEKGIBECH);
      }
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BattleId);
      }
      size += battleEvent_.CalculateSize(_repeated_battleEvent_codec);
      size += battleAvatarList_.CalculateSize(_repeated_battleAvatarList_codec);
      if (fEMLOIIPHOP_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FEMLOIIPHOP);
      }
      if (IFDMECJOGPJ != false) {
        size += 1 + 1;
      }
      size += buffList_.CalculateSize(_repeated_buffList_codec);
      if (iKIJNJOPMOB_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IKIJNJOPMOB);
      }
      if (LogicRandomSeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LogicRandomSeed);
      }
      if (RoundsLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoundsLimit);
      }
      size += monsterWaveList_.CalculateSize(_repeated_monsterWaveList_codec);
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      if (WorldLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorldLevel);
      }
      size += battleTargetInfo_.CalculateSize(_map_battleTargetInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SceneBattleInfo other) {
      if (other == null) {
        return;
      }
      if (other.HKLEKGIBECH != 0) {
        HKLEKGIBECH = other.HKLEKGIBECH;
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      battleEvent_.Add(other.battleEvent_);
      battleAvatarList_.Add(other.battleAvatarList_);
      if (other.fEMLOIIPHOP_ != null) {
        if (fEMLOIIPHOP_ == null) {
          FEMLOIIPHOP = new global::EggLink.DanhengServer.Proto.EvolveBuildBattleInfo();
        }
        FEMLOIIPHOP.MergeFrom(other.FEMLOIIPHOP);
      }
      if (other.IFDMECJOGPJ != false) {
        IFDMECJOGPJ = other.IFDMECJOGPJ;
      }
      buffList_.Add(other.buffList_);
      if (other.iKIJNJOPMOB_ != null) {
        if (iKIJNJOPMOB_ == null) {
          IKIJNJOPMOB = new global::EggLink.DanhengServer.Proto.PLJKPICHAJP();
        }
        IKIJNJOPMOB.MergeFrom(other.IKIJNJOPMOB);
      }
      if (other.LogicRandomSeed != 0) {
        LogicRandomSeed = other.LogicRandomSeed;
      }
      if (other.RoundsLimit != 0) {
        RoundsLimit = other.RoundsLimit;
      }
      monsterWaveList_.Add(other.monsterWaveList_);
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.WorldLevel != 0) {
        WorldLevel = other.WorldLevel;
      }
      battleTargetInfo_.MergeFrom(other.battleTargetInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadUInt32();
            break;
          }
          case 16: {
            WorldLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            BattleId = input.ReadUInt32();
            break;
          }
          case 40: {
            RoundsLimit = input.ReadUInt32();
            break;
          }
          case 72: {
            LogicRandomSeed = input.ReadUInt32();
            break;
          }
          case 82: {
            monsterWaveList_.AddEntriesFrom(input, _repeated_monsterWaveList_codec);
            break;
          }
          case 88: {
            HKLEKGIBECH = input.ReadUInt32();
            break;
          }
          case 98: {
            buffList_.AddEntriesFrom(input, _repeated_buffList_codec);
            break;
          }
          case 114: {
            battleAvatarList_.AddEntriesFrom(input, _repeated_battleAvatarList_codec);
            break;
          }
          case 120: {
            IFDMECJOGPJ = input.ReadBool();
            break;
          }
          case 8370: {
            if (iKIJNJOPMOB_ == null) {
              IKIJNJOPMOB = new global::EggLink.DanhengServer.Proto.PLJKPICHAJP();
            }
            input.ReadMessage(IKIJNJOPMOB);
            break;
          }
          case 9434: {
            battleEvent_.AddEntriesFrom(input, _repeated_battleEvent_codec);
            break;
          }
          case 11466: {
            battleTargetInfo_.AddEntriesFrom(input, _map_battleTargetInfo_codec);
            break;
          }
          case 14490: {
            if (fEMLOIIPHOP_ == null) {
              FEMLOIIPHOP = new global::EggLink.DanhengServer.Proto.EvolveBuildBattleInfo();
            }
            input.ReadMessage(FEMLOIIPHOP);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StageId = input.ReadUInt32();
            break;
          }
          case 16: {
            WorldLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            BattleId = input.ReadUInt32();
            break;
          }
          case 40: {
            RoundsLimit = input.ReadUInt32();
            break;
          }
          case 72: {
            LogicRandomSeed = input.ReadUInt32();
            break;
          }
          case 82: {
            monsterWaveList_.AddEntriesFrom(ref input, _repeated_monsterWaveList_codec);
            break;
          }
          case 88: {
            HKLEKGIBECH = input.ReadUInt32();
            break;
          }
          case 98: {
            buffList_.AddEntriesFrom(ref input, _repeated_buffList_codec);
            break;
          }
          case 114: {
            battleAvatarList_.AddEntriesFrom(ref input, _repeated_battleAvatarList_codec);
            break;
          }
          case 120: {
            IFDMECJOGPJ = input.ReadBool();
            break;
          }
          case 8370: {
            if (iKIJNJOPMOB_ == null) {
              IKIJNJOPMOB = new global::EggLink.DanhengServer.Proto.PLJKPICHAJP();
            }
            input.ReadMessage(IKIJNJOPMOB);
            break;
          }
          case 9434: {
            battleEvent_.AddEntriesFrom(ref input, _repeated_battleEvent_codec);
            break;
          }
          case 11466: {
            battleTargetInfo_.AddEntriesFrom(ref input, _map_battleTargetInfo_codec);
            break;
          }
          case 14490: {
            if (fEMLOIIPHOP_ == null) {
              FEMLOIIPHOP = new global::EggLink.DanhengServer.Proto.EvolveBuildBattleInfo();
            }
            input.ReadMessage(FEMLOIIPHOP);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
