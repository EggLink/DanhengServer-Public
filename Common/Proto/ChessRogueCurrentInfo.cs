// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueCurrentInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueCurrentInfo.proto</summary>
  public static partial class ChessRogueCurrentInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueCurrentInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueCurrentInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtDaGVzc1JvZ3VlQ3VycmVudEluZm8ucHJvdG8aGENoZXNzUm9ndWVBZW9u",
            "SW5mby5wcm90bxoYQ2hlc3NSb2d1ZURpY2VJbmZvLnByb3RvGhlDaGVzc1Jv",
            "Z3VlTGV2ZWxJbmZvLnByb3RvGiVDaGVzc1JvZ3VlQ3VycmVudERpZmZpY3Vs",
            "dHlJbmZvLnByb3RvGhFHRVBHTE9CQ0lLTS5wcm90bxoYQ2hlc3NSb2d1ZUdh",
            "bWVJbmZvLnByb3RvGh1DaGVzc1JvZ3VlTm91c1N0b3J5SW5mby5wcm90bxoR",
            "Q0xORkxIRkpNSEIucHJvdG8aGkNoZXNzUm9ndWVMaW5ldXBJbmZvLnByb3Rv",
            "GhlDaGVzc1JvZ3VlTm91c1ZhbHVlLnByb3RvGhZSb2d1ZVZpcnR1YWxJdGVt",
            "LnByb3RvGh5Sb2d1ZUNvbW1vblBlbmRpbmdBY3Rpb24ucHJvdG8aG0NoZXNz",
            "Um9ndWVNaXJhY2xlSW5mby5wcm90bxoYQ2hlc3NSb2d1ZUJ1ZmZJbmZvLnBy",
            "b3RvItIFChVDaGVzc1JvZ3VlQ3VycmVudEluZm8SQAoVcm9ndWVfZGlmZmlj",
            "dWx0eV9pbmZvGMQLIAEoCzIgLkNoZXNzUm9ndWVDdXJyZW50RGlmZmljdWx0",
            "eUluZm8SLAoPcm9ndWVfYnVmZl9pbmZvGAwgASgLMhMuQ2hlc3NSb2d1ZUJ1",
            "ZmZJbmZvEigKCmxldmVsX2luZm8YAyABKAsyFC5DaGVzc1JvZ3VlTGV2ZWxJ",
            "bmZvEjAKEXJvZ3VlX2xpbmV1cF9pbmZvGAkgASgLMhUuQ2hlc3NSb2d1ZUxp",
            "bmV1cEluZm8SKAoKbm91c192YWx1ZRgBIAEoCzIULkNoZXNzUm9ndWVOb3Vz",
            "VmFsdWUSLAoPcm9ndWVfYWVvbl9pbmZvGAggASgLMhMuQ2hlc3NSb2d1ZUFl",
            "b25JbmZvEi0KEnJvZ3VlX3ZpcnR1YWxfaXRlbRgCIAEoCzIRLlJvZ3VlVmly",
            "dHVhbEl0ZW0SLQoXcm9ndWVfdmlydHVhbF9pdGVtX2luZm8YDSABKAsyDC5H",
            "RVBHTE9CQ0lLTRIvChJyb2d1ZV9jdXJyZW50X2luZm8YBCADKAsyEy5DaGVz",
            "c1JvZ3VlR2FtZUluZm8SMQoPbm91c19zdG9yeV9pbmZvGAogASgLMhguQ2hl",
            "c3NSb2d1ZU5vdXNTdG9yeUluZm8SLAoPcm9ndWVfZGljZV9pbmZvGA8gASgL",
            "MhMuQ2hlc3NSb2d1ZURpY2VJbmZvEjEKEWdhbWVfbWlyYWNsZV9pbmZvGA4g",
            "ASgLMhYuQ2hlc3NSb2d1ZU1pcmFjbGVJbmZvEhgKEHJvZ3VlX3ZlcnNpb25f",
            "aWQYBiABKA0SJQoPc3RvcnlfYnVmZl9pbmZvGAUgASgLMgwuQ0xORkxIRkpN",
            "SEISMQoOcGVuZGluZ19hY3Rpb24YCyABKAsyGS5Sb2d1ZUNvbW1vblBlbmRp",
            "bmdBY3Rpb25CHqoCG0VnZ0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueAeonInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueDiceInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueLevelInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.GEPGLOBCIKMReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueGameInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.CLNFLHFJMHBReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueLineupInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueNousValueReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueVirtualItemReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueCommonPendingActionReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueBuffInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo), global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo.Parser, new[]{ "RogueDifficultyInfo", "RogueBuffInfo", "LevelInfo", "RogueLineupInfo", "NousValue", "RogueAeonInfo", "RogueVirtualItem", "RogueVirtualItemInfo", "RogueCurrentInfo", "NousStoryInfo", "RogueDiceInfo", "GameMiracleInfo", "RogueVersionId", "StoryBuffInfo", "PendingAction" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueCurrentInfo : pb::IMessage<ChessRogueCurrentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueCurrentInfo> _parser = new pb::MessageParser<ChessRogueCurrentInfo>(() => new ChessRogueCurrentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueCurrentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueCurrentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueCurrentInfo(ChessRogueCurrentInfo other) : this() {
      rogueDifficultyInfo_ = other.rogueDifficultyInfo_ != null ? other.rogueDifficultyInfo_.Clone() : null;
      rogueBuffInfo_ = other.rogueBuffInfo_ != null ? other.rogueBuffInfo_.Clone() : null;
      levelInfo_ = other.levelInfo_ != null ? other.levelInfo_.Clone() : null;
      rogueLineupInfo_ = other.rogueLineupInfo_ != null ? other.rogueLineupInfo_.Clone() : null;
      nousValue_ = other.nousValue_ != null ? other.nousValue_.Clone() : null;
      rogueAeonInfo_ = other.rogueAeonInfo_ != null ? other.rogueAeonInfo_.Clone() : null;
      rogueVirtualItem_ = other.rogueVirtualItem_ != null ? other.rogueVirtualItem_.Clone() : null;
      rogueVirtualItemInfo_ = other.rogueVirtualItemInfo_ != null ? other.rogueVirtualItemInfo_.Clone() : null;
      rogueCurrentInfo_ = other.rogueCurrentInfo_.Clone();
      nousStoryInfo_ = other.nousStoryInfo_ != null ? other.nousStoryInfo_.Clone() : null;
      rogueDiceInfo_ = other.rogueDiceInfo_ != null ? other.rogueDiceInfo_.Clone() : null;
      gameMiracleInfo_ = other.gameMiracleInfo_ != null ? other.gameMiracleInfo_.Clone() : null;
      rogueVersionId_ = other.rogueVersionId_;
      storyBuffInfo_ = other.storyBuffInfo_ != null ? other.storyBuffInfo_.Clone() : null;
      pendingAction_ = other.pendingAction_ != null ? other.pendingAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueCurrentInfo Clone() {
      return new ChessRogueCurrentInfo(this);
    }

    /// <summary>Field number for the "rogue_difficulty_info" field.</summary>
    public const int RogueDifficultyInfoFieldNumber = 1476;
    private global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo rogueDifficultyInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo RogueDifficultyInfo {
      get { return rogueDifficultyInfo_; }
      set {
        rogueDifficultyInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_buff_info" field.</summary>
    public const int RogueBuffInfoFieldNumber = 12;
    private global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo rogueBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo RogueBuffInfo {
      get { return rogueBuffInfo_; }
      set {
        rogueBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "level_info" field.</summary>
    public const int LevelInfoFieldNumber = 3;
    private global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo levelInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo LevelInfo {
      get { return levelInfo_; }
      set {
        levelInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_lineup_info" field.</summary>
    public const int RogueLineupInfoFieldNumber = 9;
    private global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo rogueLineupInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo RogueLineupInfo {
      get { return rogueLineupInfo_; }
      set {
        rogueLineupInfo_ = value;
      }
    }

    /// <summary>Field number for the "nous_value" field.</summary>
    public const int NousValueFieldNumber = 1;
    private global::EggLink.DanhengServer.Proto.ChessRogueNousValue nousValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueNousValue NousValue {
      get { return nousValue_; }
      set {
        nousValue_ = value;
      }
    }

    /// <summary>Field number for the "rogue_aeon_info" field.</summary>
    public const int RogueAeonInfoFieldNumber = 8;
    private global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo rogueAeonInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo RogueAeonInfo {
      get { return rogueAeonInfo_; }
      set {
        rogueAeonInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_virtual_item" field.</summary>
    public const int RogueVirtualItemFieldNumber = 2;
    private global::EggLink.DanhengServer.Proto.RogueVirtualItem rogueVirtualItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueVirtualItem RogueVirtualItem {
      get { return rogueVirtualItem_; }
      set {
        rogueVirtualItem_ = value;
      }
    }

    /// <summary>Field number for the "rogue_virtual_item_info" field.</summary>
    public const int RogueVirtualItemInfoFieldNumber = 13;
    private global::EggLink.DanhengServer.Proto.GEPGLOBCIKM rogueVirtualItemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.GEPGLOBCIKM RogueVirtualItemInfo {
      get { return rogueVirtualItemInfo_; }
      set {
        rogueVirtualItemInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_current_info" field.</summary>
    public const int RogueCurrentInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.ChessRogueGameInfo> _repeated_rogueCurrentInfo_codec
        = pb::FieldCodec.ForMessage(34, global::EggLink.DanhengServer.Proto.ChessRogueGameInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChessRogueGameInfo> rogueCurrentInfo_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChessRogueGameInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChessRogueGameInfo> RogueCurrentInfo {
      get { return rogueCurrentInfo_; }
    }

    /// <summary>Field number for the "nous_story_info" field.</summary>
    public const int NousStoryInfoFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo nousStoryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo NousStoryInfo {
      get { return nousStoryInfo_; }
      set {
        nousStoryInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_dice_info" field.</summary>
    public const int RogueDiceInfoFieldNumber = 15;
    private global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo rogueDiceInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo RogueDiceInfo {
      get { return rogueDiceInfo_; }
      set {
        rogueDiceInfo_ = value;
      }
    }

    /// <summary>Field number for the "game_miracle_info" field.</summary>
    public const int GameMiracleInfoFieldNumber = 14;
    private global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo gameMiracleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo GameMiracleInfo {
      get { return gameMiracleInfo_; }
      set {
        gameMiracleInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_version_id" field.</summary>
    public const int RogueVersionIdFieldNumber = 6;
    private uint rogueVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RogueVersionId {
      get { return rogueVersionId_; }
      set {
        rogueVersionId_ = value;
      }
    }

    /// <summary>Field number for the "story_buff_info" field.</summary>
    public const int StoryBuffInfoFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.CLNFLHFJMHB storyBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.CLNFLHFJMHB StoryBuffInfo {
      get { return storyBuffInfo_; }
      set {
        storyBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "pending_action" field.</summary>
    public const int PendingActionFieldNumber = 11;
    private global::EggLink.DanhengServer.Proto.RogueCommonPendingAction pendingAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueCommonPendingAction PendingAction {
      get { return pendingAction_; }
      set {
        pendingAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueCurrentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueCurrentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RogueDifficultyInfo, other.RogueDifficultyInfo)) return false;
      if (!object.Equals(RogueBuffInfo, other.RogueBuffInfo)) return false;
      if (!object.Equals(LevelInfo, other.LevelInfo)) return false;
      if (!object.Equals(RogueLineupInfo, other.RogueLineupInfo)) return false;
      if (!object.Equals(NousValue, other.NousValue)) return false;
      if (!object.Equals(RogueAeonInfo, other.RogueAeonInfo)) return false;
      if (!object.Equals(RogueVirtualItem, other.RogueVirtualItem)) return false;
      if (!object.Equals(RogueVirtualItemInfo, other.RogueVirtualItemInfo)) return false;
      if(!rogueCurrentInfo_.Equals(other.rogueCurrentInfo_)) return false;
      if (!object.Equals(NousStoryInfo, other.NousStoryInfo)) return false;
      if (!object.Equals(RogueDiceInfo, other.RogueDiceInfo)) return false;
      if (!object.Equals(GameMiracleInfo, other.GameMiracleInfo)) return false;
      if (RogueVersionId != other.RogueVersionId) return false;
      if (!object.Equals(StoryBuffInfo, other.StoryBuffInfo)) return false;
      if (!object.Equals(PendingAction, other.PendingAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rogueDifficultyInfo_ != null) hash ^= RogueDifficultyInfo.GetHashCode();
      if (rogueBuffInfo_ != null) hash ^= RogueBuffInfo.GetHashCode();
      if (levelInfo_ != null) hash ^= LevelInfo.GetHashCode();
      if (rogueLineupInfo_ != null) hash ^= RogueLineupInfo.GetHashCode();
      if (nousValue_ != null) hash ^= NousValue.GetHashCode();
      if (rogueAeonInfo_ != null) hash ^= RogueAeonInfo.GetHashCode();
      if (rogueVirtualItem_ != null) hash ^= RogueVirtualItem.GetHashCode();
      if (rogueVirtualItemInfo_ != null) hash ^= RogueVirtualItemInfo.GetHashCode();
      hash ^= rogueCurrentInfo_.GetHashCode();
      if (nousStoryInfo_ != null) hash ^= NousStoryInfo.GetHashCode();
      if (rogueDiceInfo_ != null) hash ^= RogueDiceInfo.GetHashCode();
      if (gameMiracleInfo_ != null) hash ^= GameMiracleInfo.GetHashCode();
      if (RogueVersionId != 0) hash ^= RogueVersionId.GetHashCode();
      if (storyBuffInfo_ != null) hash ^= StoryBuffInfo.GetHashCode();
      if (pendingAction_ != null) hash ^= PendingAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nousValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NousValue);
      }
      if (rogueVirtualItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RogueVirtualItem);
      }
      if (levelInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LevelInfo);
      }
      rogueCurrentInfo_.WriteTo(output, _repeated_rogueCurrentInfo_codec);
      if (storyBuffInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StoryBuffInfo);
      }
      if (RogueVersionId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RogueVersionId);
      }
      if (rogueAeonInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RogueAeonInfo);
      }
      if (rogueLineupInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RogueLineupInfo);
      }
      if (nousStoryInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(NousStoryInfo);
      }
      if (pendingAction_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PendingAction);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RogueBuffInfo);
      }
      if (rogueVirtualItemInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RogueVirtualItemInfo);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(GameMiracleInfo);
      }
      if (rogueDiceInfo_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RogueDiceInfo);
      }
      if (rogueDifficultyInfo_ != null) {
        output.WriteRawTag(162, 92);
        output.WriteMessage(RogueDifficultyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nousValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NousValue);
      }
      if (rogueVirtualItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RogueVirtualItem);
      }
      if (levelInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LevelInfo);
      }
      rogueCurrentInfo_.WriteTo(ref output, _repeated_rogueCurrentInfo_codec);
      if (storyBuffInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StoryBuffInfo);
      }
      if (RogueVersionId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RogueVersionId);
      }
      if (rogueAeonInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RogueAeonInfo);
      }
      if (rogueLineupInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RogueLineupInfo);
      }
      if (nousStoryInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(NousStoryInfo);
      }
      if (pendingAction_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PendingAction);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RogueBuffInfo);
      }
      if (rogueVirtualItemInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RogueVirtualItemInfo);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(GameMiracleInfo);
      }
      if (rogueDiceInfo_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RogueDiceInfo);
      }
      if (rogueDifficultyInfo_ != null) {
        output.WriteRawTag(162, 92);
        output.WriteMessage(RogueDifficultyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rogueDifficultyInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RogueDifficultyInfo);
      }
      if (rogueBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueBuffInfo);
      }
      if (levelInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelInfo);
      }
      if (rogueLineupInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueLineupInfo);
      }
      if (nousValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NousValue);
      }
      if (rogueAeonInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueAeonInfo);
      }
      if (rogueVirtualItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueVirtualItem);
      }
      if (rogueVirtualItemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueVirtualItemInfo);
      }
      size += rogueCurrentInfo_.CalculateSize(_repeated_rogueCurrentInfo_codec);
      if (nousStoryInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NousStoryInfo);
      }
      if (rogueDiceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueDiceInfo);
      }
      if (gameMiracleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMiracleInfo);
      }
      if (RogueVersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RogueVersionId);
      }
      if (storyBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoryBuffInfo);
      }
      if (pendingAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PendingAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueCurrentInfo other) {
      if (other == null) {
        return;
      }
      if (other.rogueDifficultyInfo_ != null) {
        if (rogueDifficultyInfo_ == null) {
          RogueDifficultyInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo();
        }
        RogueDifficultyInfo.MergeFrom(other.RogueDifficultyInfo);
      }
      if (other.rogueBuffInfo_ != null) {
        if (rogueBuffInfo_ == null) {
          RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo();
        }
        RogueBuffInfo.MergeFrom(other.RogueBuffInfo);
      }
      if (other.levelInfo_ != null) {
        if (levelInfo_ == null) {
          LevelInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo();
        }
        LevelInfo.MergeFrom(other.LevelInfo);
      }
      if (other.rogueLineupInfo_ != null) {
        if (rogueLineupInfo_ == null) {
          RogueLineupInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo();
        }
        RogueLineupInfo.MergeFrom(other.RogueLineupInfo);
      }
      if (other.nousValue_ != null) {
        if (nousValue_ == null) {
          NousValue = new global::EggLink.DanhengServer.Proto.ChessRogueNousValue();
        }
        NousValue.MergeFrom(other.NousValue);
      }
      if (other.rogueAeonInfo_ != null) {
        if (rogueAeonInfo_ == null) {
          RogueAeonInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo();
        }
        RogueAeonInfo.MergeFrom(other.RogueAeonInfo);
      }
      if (other.rogueVirtualItem_ != null) {
        if (rogueVirtualItem_ == null) {
          RogueVirtualItem = new global::EggLink.DanhengServer.Proto.RogueVirtualItem();
        }
        RogueVirtualItem.MergeFrom(other.RogueVirtualItem);
      }
      if (other.rogueVirtualItemInfo_ != null) {
        if (rogueVirtualItemInfo_ == null) {
          RogueVirtualItemInfo = new global::EggLink.DanhengServer.Proto.GEPGLOBCIKM();
        }
        RogueVirtualItemInfo.MergeFrom(other.RogueVirtualItemInfo);
      }
      rogueCurrentInfo_.Add(other.rogueCurrentInfo_);
      if (other.nousStoryInfo_ != null) {
        if (nousStoryInfo_ == null) {
          NousStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo();
        }
        NousStoryInfo.MergeFrom(other.NousStoryInfo);
      }
      if (other.rogueDiceInfo_ != null) {
        if (rogueDiceInfo_ == null) {
          RogueDiceInfo = new global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo();
        }
        RogueDiceInfo.MergeFrom(other.RogueDiceInfo);
      }
      if (other.gameMiracleInfo_ != null) {
        if (gameMiracleInfo_ == null) {
          GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo();
        }
        GameMiracleInfo.MergeFrom(other.GameMiracleInfo);
      }
      if (other.RogueVersionId != 0) {
        RogueVersionId = other.RogueVersionId;
      }
      if (other.storyBuffInfo_ != null) {
        if (storyBuffInfo_ == null) {
          StoryBuffInfo = new global::EggLink.DanhengServer.Proto.CLNFLHFJMHB();
        }
        StoryBuffInfo.MergeFrom(other.StoryBuffInfo);
      }
      if (other.pendingAction_ != null) {
        if (pendingAction_ == null) {
          PendingAction = new global::EggLink.DanhengServer.Proto.RogueCommonPendingAction();
        }
        PendingAction.MergeFrom(other.PendingAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nousValue_ == null) {
              NousValue = new global::EggLink.DanhengServer.Proto.ChessRogueNousValue();
            }
            input.ReadMessage(NousValue);
            break;
          }
          case 18: {
            if (rogueVirtualItem_ == null) {
              RogueVirtualItem = new global::EggLink.DanhengServer.Proto.RogueVirtualItem();
            }
            input.ReadMessage(RogueVirtualItem);
            break;
          }
          case 26: {
            if (levelInfo_ == null) {
              LevelInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo();
            }
            input.ReadMessage(LevelInfo);
            break;
          }
          case 34: {
            rogueCurrentInfo_.AddEntriesFrom(input, _repeated_rogueCurrentInfo_codec);
            break;
          }
          case 42: {
            if (storyBuffInfo_ == null) {
              StoryBuffInfo = new global::EggLink.DanhengServer.Proto.CLNFLHFJMHB();
            }
            input.ReadMessage(StoryBuffInfo);
            break;
          }
          case 48: {
            RogueVersionId = input.ReadUInt32();
            break;
          }
          case 66: {
            if (rogueAeonInfo_ == null) {
              RogueAeonInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo();
            }
            input.ReadMessage(RogueAeonInfo);
            break;
          }
          case 74: {
            if (rogueLineupInfo_ == null) {
              RogueLineupInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo();
            }
            input.ReadMessage(RogueLineupInfo);
            break;
          }
          case 82: {
            if (nousStoryInfo_ == null) {
              NousStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo();
            }
            input.ReadMessage(NousStoryInfo);
            break;
          }
          case 90: {
            if (pendingAction_ == null) {
              PendingAction = new global::EggLink.DanhengServer.Proto.RogueCommonPendingAction();
            }
            input.ReadMessage(PendingAction);
            break;
          }
          case 98: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 106: {
            if (rogueVirtualItemInfo_ == null) {
              RogueVirtualItemInfo = new global::EggLink.DanhengServer.Proto.GEPGLOBCIKM();
            }
            input.ReadMessage(RogueVirtualItemInfo);
            break;
          }
          case 114: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 122: {
            if (rogueDiceInfo_ == null) {
              RogueDiceInfo = new global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo();
            }
            input.ReadMessage(RogueDiceInfo);
            break;
          }
          case 11810: {
            if (rogueDifficultyInfo_ == null) {
              RogueDifficultyInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo();
            }
            input.ReadMessage(RogueDifficultyInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nousValue_ == null) {
              NousValue = new global::EggLink.DanhengServer.Proto.ChessRogueNousValue();
            }
            input.ReadMessage(NousValue);
            break;
          }
          case 18: {
            if (rogueVirtualItem_ == null) {
              RogueVirtualItem = new global::EggLink.DanhengServer.Proto.RogueVirtualItem();
            }
            input.ReadMessage(RogueVirtualItem);
            break;
          }
          case 26: {
            if (levelInfo_ == null) {
              LevelInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo();
            }
            input.ReadMessage(LevelInfo);
            break;
          }
          case 34: {
            rogueCurrentInfo_.AddEntriesFrom(ref input, _repeated_rogueCurrentInfo_codec);
            break;
          }
          case 42: {
            if (storyBuffInfo_ == null) {
              StoryBuffInfo = new global::EggLink.DanhengServer.Proto.CLNFLHFJMHB();
            }
            input.ReadMessage(StoryBuffInfo);
            break;
          }
          case 48: {
            RogueVersionId = input.ReadUInt32();
            break;
          }
          case 66: {
            if (rogueAeonInfo_ == null) {
              RogueAeonInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo();
            }
            input.ReadMessage(RogueAeonInfo);
            break;
          }
          case 74: {
            if (rogueLineupInfo_ == null) {
              RogueLineupInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo();
            }
            input.ReadMessage(RogueLineupInfo);
            break;
          }
          case 82: {
            if (nousStoryInfo_ == null) {
              NousStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousStoryInfo();
            }
            input.ReadMessage(NousStoryInfo);
            break;
          }
          case 90: {
            if (pendingAction_ == null) {
              PendingAction = new global::EggLink.DanhengServer.Proto.RogueCommonPendingAction();
            }
            input.ReadMessage(PendingAction);
            break;
          }
          case 98: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 106: {
            if (rogueVirtualItemInfo_ == null) {
              RogueVirtualItemInfo = new global::EggLink.DanhengServer.Proto.GEPGLOBCIKM();
            }
            input.ReadMessage(RogueVirtualItemInfo);
            break;
          }
          case 114: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 122: {
            if (rogueDiceInfo_ == null) {
              RogueDiceInfo = new global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo();
            }
            input.ReadMessage(RogueDiceInfo);
            break;
          }
          case 11810: {
            if (rogueDifficultyInfo_ == null) {
              RogueDifficultyInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo();
            }
            input.ReadMessage(RogueDifficultyInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
