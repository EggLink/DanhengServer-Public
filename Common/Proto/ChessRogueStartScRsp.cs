// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueStartScRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueStartScRsp.proto</summary>
  public static partial class ChessRogueStartScRspReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueStartScRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueStartScRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpDaGVzc1JvZ3VlU3RhcnRTY1JzcC5wcm90bxobQ2hlc3NSb2d1ZUN1cnJl",
            "bnRJbmZvLnByb3RvGhhDaGVzc1JvZ3VlQ2VsbEluZm8ucHJvdG8aGkNoZXNz",
            "Um9ndWVQbGF5ZXJJbmZvLnByb3RvGhBMaW5ldXBJbmZvLnByb3RvGg9TY2Vu",
            "ZUluZm8ucHJvdG8aHUNoZXNzUm9ndWVRdWVyeUdhbWVJbmZvLnByb3RvIpsC",
            "ChRDaGVzc1JvZ3VlU3RhcnRTY1JzcBIqCgtwbGF5ZXJfaW5mbxgOIAEoCzIV",
            "LkNoZXNzUm9ndWVQbGF5ZXJJbmZvEjIKFWNoZXNzX3JvZ3VlX2NlbGxfaW5m",
            "bxgNIAEoCzITLkNoZXNzUm9ndWVDZWxsSW5mbxI0ChJyb2d1ZV9jdXJyZW50",
            "X2luZm8YAyABKAsyGC5DaGVzc1JvZ3VlUXVlcnlHYW1lSW5mbxIPCgdyZXRj",
            "b2RlGAIgASgNEiQKBGluZm8YASABKAsyFi5DaGVzc1JvZ3VlQ3VycmVudElu",
            "Zm8SGQoFc2NlbmUYDyABKAsyCi5TY2VuZUluZm8SGwoGbGluZXVwGAggASgL",
            "MgsuTGluZXVwSW5mb0IeqgIbRWdnTGluay5EYW5oZW5nU2VydmVyLlByb3Rv",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueCellInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRoguePlayerInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.LineupInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.SceneInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueQueryGameInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueStartScRsp), global::EggLink.DanhengServer.Proto.ChessRogueStartScRsp.Parser, new[]{ "PlayerInfo", "ChessRogueCellInfo", "RogueCurrentInfo", "Retcode", "Info", "Scene", "Lineup" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueStartScRsp : pb::IMessage<ChessRogueStartScRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueStartScRsp> _parser = new pb::MessageParser<ChessRogueStartScRsp>(() => new ChessRogueStartScRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueStartScRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueStartScRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueStartScRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueStartScRsp(ChessRogueStartScRsp other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      chessRogueCellInfo_ = other.chessRogueCellInfo_ != null ? other.chessRogueCellInfo_.Clone() : null;
      rogueCurrentInfo_ = other.rogueCurrentInfo_ != null ? other.rogueCurrentInfo_.Clone() : null;
      retcode_ = other.retcode_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      lineup_ = other.lineup_ != null ? other.lineup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueStartScRsp Clone() {
      return new ChessRogueStartScRsp(this);
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 14;
    private global::EggLink.DanhengServer.Proto.ChessRoguePlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRoguePlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "chess_rogue_cell_info" field.</summary>
    public const int ChessRogueCellInfoFieldNumber = 13;
    private global::EggLink.DanhengServer.Proto.ChessRogueCellInfo chessRogueCellInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueCellInfo ChessRogueCellInfo {
      get { return chessRogueCellInfo_; }
      set {
        chessRogueCellInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_current_info" field.</summary>
    public const int RogueCurrentInfoFieldNumber = 3;
    private global::EggLink.DanhengServer.Proto.ChessRogueQueryGameInfo rogueCurrentInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueQueryGameInfo RogueCurrentInfo {
      get { return rogueCurrentInfo_; }
      set {
        rogueCurrentInfo_ = value;
      }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 2;
    private uint retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 15;
    private global::EggLink.DanhengServer.Proto.SceneInfo scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.SceneInfo Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    /// <summary>Field number for the "lineup" field.</summary>
    public const int LineupFieldNumber = 8;
    private global::EggLink.DanhengServer.Proto.LineupInfo lineup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LineupInfo Lineup {
      get { return lineup_; }
      set {
        lineup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueStartScRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueStartScRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (!object.Equals(ChessRogueCellInfo, other.ChessRogueCellInfo)) return false;
      if (!object.Equals(RogueCurrentInfo, other.RogueCurrentInfo)) return false;
      if (Retcode != other.Retcode) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      if (!object.Equals(Lineup, other.Lineup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (chessRogueCellInfo_ != null) hash ^= ChessRogueCellInfo.GetHashCode();
      if (rogueCurrentInfo_ != null) hash ^= RogueCurrentInfo.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (lineup_ != null) hash ^= Lineup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (Retcode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Retcode);
      }
      if (rogueCurrentInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RogueCurrentInfo);
      }
      if (lineup_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Lineup);
      }
      if (chessRogueCellInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ChessRogueCellInfo);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PlayerInfo);
      }
      if (scene_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (Retcode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Retcode);
      }
      if (rogueCurrentInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RogueCurrentInfo);
      }
      if (lineup_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Lineup);
      }
      if (chessRogueCellInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ChessRogueCellInfo);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PlayerInfo);
      }
      if (scene_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (chessRogueCellInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChessRogueCellInfo);
      }
      if (rogueCurrentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueCurrentInfo);
      }
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Retcode);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (lineup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lineup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueStartScRsp other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::EggLink.DanhengServer.Proto.ChessRoguePlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.chessRogueCellInfo_ != null) {
        if (chessRogueCellInfo_ == null) {
          ChessRogueCellInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCellInfo();
        }
        ChessRogueCellInfo.MergeFrom(other.ChessRogueCellInfo);
      }
      if (other.rogueCurrentInfo_ != null) {
        if (rogueCurrentInfo_ == null) {
          RogueCurrentInfo = new global::EggLink.DanhengServer.Proto.ChessRogueQueryGameInfo();
        }
        RogueCurrentInfo.MergeFrom(other.RogueCurrentInfo);
      }
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::EggLink.DanhengServer.Proto.SceneInfo();
        }
        Scene.MergeFrom(other.Scene);
      }
      if (other.lineup_ != null) {
        if (lineup_ == null) {
          Lineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
        }
        Lineup.MergeFrom(other.Lineup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            Retcode = input.ReadUInt32();
            break;
          }
          case 26: {
            if (rogueCurrentInfo_ == null) {
              RogueCurrentInfo = new global::EggLink.DanhengServer.Proto.ChessRogueQueryGameInfo();
            }
            input.ReadMessage(RogueCurrentInfo);
            break;
          }
          case 66: {
            if (lineup_ == null) {
              Lineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(Lineup);
            break;
          }
          case 106: {
            if (chessRogueCellInfo_ == null) {
              ChessRogueCellInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCellInfo();
            }
            input.ReadMessage(ChessRogueCellInfo);
            break;
          }
          case 114: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::EggLink.DanhengServer.Proto.ChessRoguePlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 122: {
            if (scene_ == null) {
              Scene = new global::EggLink.DanhengServer.Proto.SceneInfo();
            }
            input.ReadMessage(Scene);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            Retcode = input.ReadUInt32();
            break;
          }
          case 26: {
            if (rogueCurrentInfo_ == null) {
              RogueCurrentInfo = new global::EggLink.DanhengServer.Proto.ChessRogueQueryGameInfo();
            }
            input.ReadMessage(RogueCurrentInfo);
            break;
          }
          case 66: {
            if (lineup_ == null) {
              Lineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(Lineup);
            break;
          }
          case 106: {
            if (chessRogueCellInfo_ == null) {
              ChessRogueCellInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCellInfo();
            }
            input.ReadMessage(ChessRogueCellInfo);
            break;
          }
          case 114: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::EggLink.DanhengServer.Proto.ChessRoguePlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 122: {
            if (scene_ == null) {
              Scene = new global::EggLink.DanhengServer.Proto.SceneInfo();
            }
            input.ReadMessage(Scene);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
