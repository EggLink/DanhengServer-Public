// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SceneMapInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from SceneMapInfo.proto</summary>
  public static partial class SceneMapInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for SceneMapInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneMapInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJTY2VuZU1hcEluZm8ucHJvdG8aE01hemVQcm9wU3RhdGUucHJvdG8aD01h",
            "emVHcm91cC5wcm90bxoPQ2hlc3RJbmZvLnByb3RvGhFCR0ZNTU9FSEpDRS5w",
            "cm90byLAAgoMU2NlbmVNYXBJbmZvEhIKCmNvbnRlbnRfaWQYCyABKA0SEAoI",
            "ZW50cnlfaWQYBSABKA0SHAoUdW5sb2NrX3RlbGVwb3J0X2xpc3QYCiADKA0S",
            "EwoLQk9OQUNCT0lJQkUYDSABKA0SIQoLQUhPSk5NTkZPRkgYBCADKAsyDC5C",
            "R0ZNTU9FSEpDRRIcChRsaWdodGVuX3NlY3Rpb25fbGlzdBgMIAMoDRIeCgpj",
            "aGVzdF9saXN0GAkgAygLMgouQ2hlc3RJbmZvEg8KB3JldGNvZGUYASABKA0S",
            "GAoQY3VyX21hcF9lbnRyeV9pZBgCIAEoDRIjCg9tYXplX2dyb3VwX2xpc3QY",
            "DiADKAsyCi5NYXplR3JvdXASJgoObWF6ZV9wcm9wX2xpc3QYAyADKAsyDi5N",
            "YXplUHJvcFN0YXRlQh6qAhtFZ2dMaW5rLkRhbmhlbmdTZXJ2ZXIuUHJvdG9i",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.MazePropStateReflection.Descriptor, global::EggLink.DanhengServer.Proto.MazeGroupReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChestInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.BGFMMOEHJCEReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.SceneMapInfo), global::EggLink.DanhengServer.Proto.SceneMapInfo.Parser, new[]{ "ContentId", "EntryId", "UnlockTeleportList", "BONACBOIIBE", "AHOJNMNFOFH", "LightenSectionList", "ChestList", "Retcode", "CurMapEntryId", "MazeGroupList", "MazePropList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SceneMapInfo : pb::IMessage<SceneMapInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SceneMapInfo> _parser = new pb::MessageParser<SceneMapInfo>(() => new SceneMapInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SceneMapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.SceneMapInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneMapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneMapInfo(SceneMapInfo other) : this() {
      contentId_ = other.contentId_;
      entryId_ = other.entryId_;
      unlockTeleportList_ = other.unlockTeleportList_.Clone();
      bONACBOIIBE_ = other.bONACBOIIBE_;
      aHOJNMNFOFH_ = other.aHOJNMNFOFH_.Clone();
      lightenSectionList_ = other.lightenSectionList_.Clone();
      chestList_ = other.chestList_.Clone();
      retcode_ = other.retcode_;
      curMapEntryId_ = other.curMapEntryId_;
      mazeGroupList_ = other.mazeGroupList_.Clone();
      mazePropList_ = other.mazePropList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneMapInfo Clone() {
      return new SceneMapInfo(this);
    }

    /// <summary>Field number for the "content_id" field.</summary>
    public const int ContentIdFieldNumber = 11;
    private uint contentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ContentId {
      get { return contentId_; }
      set {
        contentId_ = value;
      }
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 5;
    private uint entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntryId {
      get { return entryId_; }
      set {
        entryId_ = value;
      }
    }

    /// <summary>Field number for the "unlock_teleport_list" field.</summary>
    public const int UnlockTeleportListFieldNumber = 10;
    private static readonly pb::FieldCodec<uint> _repeated_unlockTeleportList_codec
        = pb::FieldCodec.ForUInt32(82);
    private readonly pbc::RepeatedField<uint> unlockTeleportList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> UnlockTeleportList {
      get { return unlockTeleportList_; }
    }

    /// <summary>Field number for the "BONACBOIIBE" field.</summary>
    public const int BONACBOIIBEFieldNumber = 13;
    private uint bONACBOIIBE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BONACBOIIBE {
      get { return bONACBOIIBE_; }
      set {
        bONACBOIIBE_ = value;
      }
    }

    /// <summary>Field number for the "AHOJNMNFOFH" field.</summary>
    public const int AHOJNMNFOFHFieldNumber = 4;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.BGFMMOEHJCE> _repeated_aHOJNMNFOFH_codec
        = pb::FieldCodec.ForMessage(34, global::EggLink.DanhengServer.Proto.BGFMMOEHJCE.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BGFMMOEHJCE> aHOJNMNFOFH_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BGFMMOEHJCE>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BGFMMOEHJCE> AHOJNMNFOFH {
      get { return aHOJNMNFOFH_; }
    }

    /// <summary>Field number for the "lighten_section_list" field.</summary>
    public const int LightenSectionListFieldNumber = 12;
    private static readonly pb::FieldCodec<uint> _repeated_lightenSectionList_codec
        = pb::FieldCodec.ForUInt32(98);
    private readonly pbc::RepeatedField<uint> lightenSectionList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> LightenSectionList {
      get { return lightenSectionList_; }
    }

    /// <summary>Field number for the "chest_list" field.</summary>
    public const int ChestListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.ChestInfo> _repeated_chestList_codec
        = pb::FieldCodec.ForMessage(74, global::EggLink.DanhengServer.Proto.ChestInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChestInfo> chestList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChestInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChestInfo> ChestList {
      get { return chestList_; }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 1;
    private uint retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    /// <summary>Field number for the "cur_map_entry_id" field.</summary>
    public const int CurMapEntryIdFieldNumber = 2;
    private uint curMapEntryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurMapEntryId {
      get { return curMapEntryId_; }
      set {
        curMapEntryId_ = value;
      }
    }

    /// <summary>Field number for the "maze_group_list" field.</summary>
    public const int MazeGroupListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.MazeGroup> _repeated_mazeGroupList_codec
        = pb::FieldCodec.ForMessage(114, global::EggLink.DanhengServer.Proto.MazeGroup.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MazeGroup> mazeGroupList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MazeGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MazeGroup> MazeGroupList {
      get { return mazeGroupList_; }
    }

    /// <summary>Field number for the "maze_prop_list" field.</summary>
    public const int MazePropListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.MazePropState> _repeated_mazePropList_codec
        = pb::FieldCodec.ForMessage(26, global::EggLink.DanhengServer.Proto.MazePropState.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MazePropState> mazePropList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MazePropState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MazePropState> MazePropList {
      get { return mazePropList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SceneMapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SceneMapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentId != other.ContentId) return false;
      if (EntryId != other.EntryId) return false;
      if(!unlockTeleportList_.Equals(other.unlockTeleportList_)) return false;
      if (BONACBOIIBE != other.BONACBOIIBE) return false;
      if(!aHOJNMNFOFH_.Equals(other.aHOJNMNFOFH_)) return false;
      if(!lightenSectionList_.Equals(other.lightenSectionList_)) return false;
      if(!chestList_.Equals(other.chestList_)) return false;
      if (Retcode != other.Retcode) return false;
      if (CurMapEntryId != other.CurMapEntryId) return false;
      if(!mazeGroupList_.Equals(other.mazeGroupList_)) return false;
      if(!mazePropList_.Equals(other.mazePropList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentId != 0) hash ^= ContentId.GetHashCode();
      if (EntryId != 0) hash ^= EntryId.GetHashCode();
      hash ^= unlockTeleportList_.GetHashCode();
      if (BONACBOIIBE != 0) hash ^= BONACBOIIBE.GetHashCode();
      hash ^= aHOJNMNFOFH_.GetHashCode();
      hash ^= lightenSectionList_.GetHashCode();
      hash ^= chestList_.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (CurMapEntryId != 0) hash ^= CurMapEntryId.GetHashCode();
      hash ^= mazeGroupList_.GetHashCode();
      hash ^= mazePropList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Retcode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Retcode);
      }
      if (CurMapEntryId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CurMapEntryId);
      }
      mazePropList_.WriteTo(output, _repeated_mazePropList_codec);
      aHOJNMNFOFH_.WriteTo(output, _repeated_aHOJNMNFOFH_codec);
      if (EntryId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EntryId);
      }
      chestList_.WriteTo(output, _repeated_chestList_codec);
      unlockTeleportList_.WriteTo(output, _repeated_unlockTeleportList_codec);
      if (ContentId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(ContentId);
      }
      lightenSectionList_.WriteTo(output, _repeated_lightenSectionList_codec);
      if (BONACBOIIBE != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BONACBOIIBE);
      }
      mazeGroupList_.WriteTo(output, _repeated_mazeGroupList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Retcode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Retcode);
      }
      if (CurMapEntryId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CurMapEntryId);
      }
      mazePropList_.WriteTo(ref output, _repeated_mazePropList_codec);
      aHOJNMNFOFH_.WriteTo(ref output, _repeated_aHOJNMNFOFH_codec);
      if (EntryId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EntryId);
      }
      chestList_.WriteTo(ref output, _repeated_chestList_codec);
      unlockTeleportList_.WriteTo(ref output, _repeated_unlockTeleportList_codec);
      if (ContentId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(ContentId);
      }
      lightenSectionList_.WriteTo(ref output, _repeated_lightenSectionList_codec);
      if (BONACBOIIBE != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BONACBOIIBE);
      }
      mazeGroupList_.WriteTo(ref output, _repeated_mazeGroupList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ContentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContentId);
      }
      if (EntryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntryId);
      }
      size += unlockTeleportList_.CalculateSize(_repeated_unlockTeleportList_codec);
      if (BONACBOIIBE != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BONACBOIIBE);
      }
      size += aHOJNMNFOFH_.CalculateSize(_repeated_aHOJNMNFOFH_codec);
      size += lightenSectionList_.CalculateSize(_repeated_lightenSectionList_codec);
      size += chestList_.CalculateSize(_repeated_chestList_codec);
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Retcode);
      }
      if (CurMapEntryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurMapEntryId);
      }
      size += mazeGroupList_.CalculateSize(_repeated_mazeGroupList_codec);
      size += mazePropList_.CalculateSize(_repeated_mazePropList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SceneMapInfo other) {
      if (other == null) {
        return;
      }
      if (other.ContentId != 0) {
        ContentId = other.ContentId;
      }
      if (other.EntryId != 0) {
        EntryId = other.EntryId;
      }
      unlockTeleportList_.Add(other.unlockTeleportList_);
      if (other.BONACBOIIBE != 0) {
        BONACBOIIBE = other.BONACBOIIBE;
      }
      aHOJNMNFOFH_.Add(other.aHOJNMNFOFH_);
      lightenSectionList_.Add(other.lightenSectionList_);
      chestList_.Add(other.chestList_);
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      if (other.CurMapEntryId != 0) {
        CurMapEntryId = other.CurMapEntryId;
      }
      mazeGroupList_.Add(other.mazeGroupList_);
      mazePropList_.Add(other.mazePropList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Retcode = input.ReadUInt32();
            break;
          }
          case 16: {
            CurMapEntryId = input.ReadUInt32();
            break;
          }
          case 26: {
            mazePropList_.AddEntriesFrom(input, _repeated_mazePropList_codec);
            break;
          }
          case 34: {
            aHOJNMNFOFH_.AddEntriesFrom(input, _repeated_aHOJNMNFOFH_codec);
            break;
          }
          case 40: {
            EntryId = input.ReadUInt32();
            break;
          }
          case 74: {
            chestList_.AddEntriesFrom(input, _repeated_chestList_codec);
            break;
          }
          case 82:
          case 80: {
            unlockTeleportList_.AddEntriesFrom(input, _repeated_unlockTeleportList_codec);
            break;
          }
          case 88: {
            ContentId = input.ReadUInt32();
            break;
          }
          case 98:
          case 96: {
            lightenSectionList_.AddEntriesFrom(input, _repeated_lightenSectionList_codec);
            break;
          }
          case 104: {
            BONACBOIIBE = input.ReadUInt32();
            break;
          }
          case 114: {
            mazeGroupList_.AddEntriesFrom(input, _repeated_mazeGroupList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Retcode = input.ReadUInt32();
            break;
          }
          case 16: {
            CurMapEntryId = input.ReadUInt32();
            break;
          }
          case 26: {
            mazePropList_.AddEntriesFrom(ref input, _repeated_mazePropList_codec);
            break;
          }
          case 34: {
            aHOJNMNFOFH_.AddEntriesFrom(ref input, _repeated_aHOJNMNFOFH_codec);
            break;
          }
          case 40: {
            EntryId = input.ReadUInt32();
            break;
          }
          case 74: {
            chestList_.AddEntriesFrom(ref input, _repeated_chestList_codec);
            break;
          }
          case 82:
          case 80: {
            unlockTeleportList_.AddEntriesFrom(ref input, _repeated_unlockTeleportList_codec);
            break;
          }
          case 88: {
            ContentId = input.ReadUInt32();
            break;
          }
          case 98:
          case 96: {
            lightenSectionList_.AddEntriesFrom(ref input, _repeated_lightenSectionList_codec);
            break;
          }
          case 104: {
            BONACBOIIBE = input.ReadUInt32();
            break;
          }
          case 114: {
            mazeGroupList_.AddEntriesFrom(ref input, _repeated_mazeGroupList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
