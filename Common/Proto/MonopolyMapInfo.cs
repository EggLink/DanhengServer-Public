// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonopolyMapInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from MonopolyMapInfo.proto</summary>
  public static partial class MonopolyMapInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for MonopolyMapInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonopolyMapInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVNb25vcG9seU1hcEluZm8ucHJvdG8aEU5MQUxPTUtORUdGLnByb3RvIqQB",
            "Cg9Nb25vcG9seU1hcEluZm8SIQoLR0xGRUdMR01OT0YYCyADKAsyDC5OTEFM",
            "T01LTkVHRhIhCgtCSUFKQU1BT01CQhgKIAEoCzIMLk5MQUxPTUtORUdGEiEK",
            "C0VNTUhKRUtJRUpKGAggAygLMgwuTkxBTE9NS05FR0YSEwoLRkVIR0pKUEdN",
            "REEYDyABKA0SEwoLT0ZEQUNMTklNSlAYAyABKA1CHqoCG0VnZ0xpbmsuRGFu",
            "aGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.NLALOMKNEGFReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.MonopolyMapInfo), global::EggLink.DanhengServer.Proto.MonopolyMapInfo.Parser, new[]{ "GLFEGLGMNOF", "BIAJAMAOMBB", "EMMHJEKIEJJ", "FEHGJJPGMDA", "OFDACLNIMJP" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonopolyMapInfo : pb::IMessage<MonopolyMapInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonopolyMapInfo> _parser = new pb::MessageParser<MonopolyMapInfo>(() => new MonopolyMapInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonopolyMapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.MonopolyMapInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonopolyMapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonopolyMapInfo(MonopolyMapInfo other) : this() {
      gLFEGLGMNOF_ = other.gLFEGLGMNOF_.Clone();
      bIAJAMAOMBB_ = other.bIAJAMAOMBB_ != null ? other.bIAJAMAOMBB_.Clone() : null;
      eMMHJEKIEJJ_ = other.eMMHJEKIEJJ_.Clone();
      fEHGJJPGMDA_ = other.fEHGJJPGMDA_;
      oFDACLNIMJP_ = other.oFDACLNIMJP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonopolyMapInfo Clone() {
      return new MonopolyMapInfo(this);
    }

    /// <summary>Field number for the "GLFEGLGMNOF" field.</summary>
    public const int GLFEGLGMNOFFieldNumber = 11;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.NLALOMKNEGF> _repeated_gLFEGLGMNOF_codec
        = pb::FieldCodec.ForMessage(90, global::EggLink.DanhengServer.Proto.NLALOMKNEGF.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.NLALOMKNEGF> gLFEGLGMNOF_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.NLALOMKNEGF>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.NLALOMKNEGF> GLFEGLGMNOF {
      get { return gLFEGLGMNOF_; }
    }

    /// <summary>Field number for the "BIAJAMAOMBB" field.</summary>
    public const int BIAJAMAOMBBFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.NLALOMKNEGF bIAJAMAOMBB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.NLALOMKNEGF BIAJAMAOMBB {
      get { return bIAJAMAOMBB_; }
      set {
        bIAJAMAOMBB_ = value;
      }
    }

    /// <summary>Field number for the "EMMHJEKIEJJ" field.</summary>
    public const int EMMHJEKIEJJFieldNumber = 8;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.NLALOMKNEGF> _repeated_eMMHJEKIEJJ_codec
        = pb::FieldCodec.ForMessage(66, global::EggLink.DanhengServer.Proto.NLALOMKNEGF.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.NLALOMKNEGF> eMMHJEKIEJJ_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.NLALOMKNEGF>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.NLALOMKNEGF> EMMHJEKIEJJ {
      get { return eMMHJEKIEJJ_; }
    }

    /// <summary>Field number for the "FEHGJJPGMDA" field.</summary>
    public const int FEHGJJPGMDAFieldNumber = 15;
    private uint fEHGJJPGMDA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FEHGJJPGMDA {
      get { return fEHGJJPGMDA_; }
      set {
        fEHGJJPGMDA_ = value;
      }
    }

    /// <summary>Field number for the "OFDACLNIMJP" field.</summary>
    public const int OFDACLNIMJPFieldNumber = 3;
    private uint oFDACLNIMJP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OFDACLNIMJP {
      get { return oFDACLNIMJP_; }
      set {
        oFDACLNIMJP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonopolyMapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonopolyMapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gLFEGLGMNOF_.Equals(other.gLFEGLGMNOF_)) return false;
      if (!object.Equals(BIAJAMAOMBB, other.BIAJAMAOMBB)) return false;
      if(!eMMHJEKIEJJ_.Equals(other.eMMHJEKIEJJ_)) return false;
      if (FEHGJJPGMDA != other.FEHGJJPGMDA) return false;
      if (OFDACLNIMJP != other.OFDACLNIMJP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gLFEGLGMNOF_.GetHashCode();
      if (bIAJAMAOMBB_ != null) hash ^= BIAJAMAOMBB.GetHashCode();
      hash ^= eMMHJEKIEJJ_.GetHashCode();
      if (FEHGJJPGMDA != 0) hash ^= FEHGJJPGMDA.GetHashCode();
      if (OFDACLNIMJP != 0) hash ^= OFDACLNIMJP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OFDACLNIMJP != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OFDACLNIMJP);
      }
      eMMHJEKIEJJ_.WriteTo(output, _repeated_eMMHJEKIEJJ_codec);
      if (bIAJAMAOMBB_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(BIAJAMAOMBB);
      }
      gLFEGLGMNOF_.WriteTo(output, _repeated_gLFEGLGMNOF_codec);
      if (FEHGJJPGMDA != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(FEHGJJPGMDA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OFDACLNIMJP != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OFDACLNIMJP);
      }
      eMMHJEKIEJJ_.WriteTo(ref output, _repeated_eMMHJEKIEJJ_codec);
      if (bIAJAMAOMBB_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(BIAJAMAOMBB);
      }
      gLFEGLGMNOF_.WriteTo(ref output, _repeated_gLFEGLGMNOF_codec);
      if (FEHGJJPGMDA != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(FEHGJJPGMDA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gLFEGLGMNOF_.CalculateSize(_repeated_gLFEGLGMNOF_codec);
      if (bIAJAMAOMBB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BIAJAMAOMBB);
      }
      size += eMMHJEKIEJJ_.CalculateSize(_repeated_eMMHJEKIEJJ_codec);
      if (FEHGJJPGMDA != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FEHGJJPGMDA);
      }
      if (OFDACLNIMJP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OFDACLNIMJP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonopolyMapInfo other) {
      if (other == null) {
        return;
      }
      gLFEGLGMNOF_.Add(other.gLFEGLGMNOF_);
      if (other.bIAJAMAOMBB_ != null) {
        if (bIAJAMAOMBB_ == null) {
          BIAJAMAOMBB = new global::EggLink.DanhengServer.Proto.NLALOMKNEGF();
        }
        BIAJAMAOMBB.MergeFrom(other.BIAJAMAOMBB);
      }
      eMMHJEKIEJJ_.Add(other.eMMHJEKIEJJ_);
      if (other.FEHGJJPGMDA != 0) {
        FEHGJJPGMDA = other.FEHGJJPGMDA;
      }
      if (other.OFDACLNIMJP != 0) {
        OFDACLNIMJP = other.OFDACLNIMJP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            OFDACLNIMJP = input.ReadUInt32();
            break;
          }
          case 66: {
            eMMHJEKIEJJ_.AddEntriesFrom(input, _repeated_eMMHJEKIEJJ_codec);
            break;
          }
          case 82: {
            if (bIAJAMAOMBB_ == null) {
              BIAJAMAOMBB = new global::EggLink.DanhengServer.Proto.NLALOMKNEGF();
            }
            input.ReadMessage(BIAJAMAOMBB);
            break;
          }
          case 90: {
            gLFEGLGMNOF_.AddEntriesFrom(input, _repeated_gLFEGLGMNOF_codec);
            break;
          }
          case 120: {
            FEHGJJPGMDA = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            OFDACLNIMJP = input.ReadUInt32();
            break;
          }
          case 66: {
            eMMHJEKIEJJ_.AddEntriesFrom(ref input, _repeated_eMMHJEKIEJJ_codec);
            break;
          }
          case 82: {
            if (bIAJAMAOMBB_ == null) {
              BIAJAMAOMBB = new global::EggLink.DanhengServer.Proto.NLALOMKNEGF();
            }
            input.ReadMessage(BIAJAMAOMBB);
            break;
          }
          case 90: {
            gLFEGLGMNOF_.AddEntriesFrom(ref input, _repeated_gLFEGLGMNOF_codec);
            break;
          }
          case 120: {
            FEHGJJPGMDA = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
