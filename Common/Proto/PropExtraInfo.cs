// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PropExtraInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from PropExtraInfo.proto</summary>
  public static partial class PropExtraInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for PropExtraInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PropExtraInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm9wRXh0cmFJbmZvLnByb3RvGh1Sb2d1ZVRvdXJuV29ya2JlbmNoSW5m",
            "by5wcm90bxoZUm9ndWVDdXJzZUNoZXN0SW5mby5wcm90bxoYUm9ndWVUb3Vy",
            "bkRvb3JJbmZvLnByb3RvGhxSb2d1ZUdhbWJsZU1hY2hpbmVJbmZvLnByb3Rv",
            "GhJQcm9wQWVvbkluZm8ucHJvdG8aE1Byb3BSb2d1ZUluZm8ucHJvdG8aGFBy",
            "b3BDaGVzc1JvZ3VlSW5mby5wcm90byKHAwoNUHJvcEV4dHJhSW5mbxIkCgpy",
            "b2d1ZV9pbmZvGA4gASgLMg4uUHJvcFJvZ3VlSW5mb0gAEiIKCWFlb25faW5m",
            "bxgJIAEoCzINLlByb3BBZW9uSW5mb0gAEi8KEGNoZXNzX3JvZ3VlX2luZm8Y",
            "AyABKAsyEy5Qcm9wQ2hlc3NSb2d1ZUluZm9IABI0ChVyb2d1ZV90b3Vybl9k",
            "b29yX2luZm8YCyABKAsyEy5Sb2d1ZVRvdXJuRG9vckluZm9IABI+Chpyb2d1",
            "ZV90b3Vybl93b3JrYmVuY2hfaW5mbxgFIAEoCzIYLlJvZ3VlVG91cm5Xb3Jr",
            "YmVuY2hJbmZvSAASPAoZcm9ndWVfZ2FtYmxlX21hY2hpbmVfaW5mbxgGIAEo",
            "CzIXLlJvZ3VlR2FtYmxlTWFjaGluZUluZm9IABI2ChZyb2d1ZV9jdXJzZV9j",
            "aGVzdF9pbmZvGAQgASgLMhQuUm9ndWVDdXJzZUNoZXN0SW5mb0gAQg8KDUlu",
            "Zm9PbmVvZkNhc2VCHqoCG0VnZ0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueCurseChestInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueTournDoorInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueGambleMachineInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.PropAeonInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.PropRogueInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.PropChessRogueInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.PropExtraInfo), global::EggLink.DanhengServer.Proto.PropExtraInfo.Parser, new[]{ "RogueInfo", "AeonInfo", "ChessRogueInfo", "RogueTournDoorInfo", "RogueTournWorkbenchInfo", "RogueGambleMachineInfo", "RogueCurseChestInfo" }, new[]{ "InfoOneofCase" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PropExtraInfo : pb::IMessage<PropExtraInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropExtraInfo> _parser = new pb::MessageParser<PropExtraInfo>(() => new PropExtraInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropExtraInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.PropExtraInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropExtraInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropExtraInfo(PropExtraInfo other) : this() {
      switch (other.InfoOneofCaseCase) {
        case InfoOneofCaseOneofCase.RogueInfo:
          RogueInfo = other.RogueInfo.Clone();
          break;
        case InfoOneofCaseOneofCase.AeonInfo:
          AeonInfo = other.AeonInfo.Clone();
          break;
        case InfoOneofCaseOneofCase.ChessRogueInfo:
          ChessRogueInfo = other.ChessRogueInfo.Clone();
          break;
        case InfoOneofCaseOneofCase.RogueTournDoorInfo:
          RogueTournDoorInfo = other.RogueTournDoorInfo.Clone();
          break;
        case InfoOneofCaseOneofCase.RogueTournWorkbenchInfo:
          RogueTournWorkbenchInfo = other.RogueTournWorkbenchInfo.Clone();
          break;
        case InfoOneofCaseOneofCase.RogueGambleMachineInfo:
          RogueGambleMachineInfo = other.RogueGambleMachineInfo.Clone();
          break;
        case InfoOneofCaseOneofCase.RogueCurseChestInfo:
          RogueCurseChestInfo = other.RogueCurseChestInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropExtraInfo Clone() {
      return new PropExtraInfo(this);
    }

    /// <summary>Field number for the "rogue_info" field.</summary>
    public const int RogueInfoFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.PropRogueInfo RogueInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo ? (global::EggLink.DanhengServer.Proto.PropRogueInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.RogueInfo;
      }
    }

    /// <summary>Field number for the "aeon_info" field.</summary>
    public const int AeonInfoFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.PropAeonInfo AeonInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo ? (global::EggLink.DanhengServer.Proto.PropAeonInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.AeonInfo;
      }
    }

    /// <summary>Field number for the "chess_rogue_info" field.</summary>
    public const int ChessRogueInfoFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.PropChessRogueInfo ChessRogueInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo ? (global::EggLink.DanhengServer.Proto.PropChessRogueInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.ChessRogueInfo;
      }
    }

    /// <summary>Field number for the "rogue_tourn_door_info" field.</summary>
    public const int RogueTournDoorInfoFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueTournDoorInfo RogueTournDoorInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo ? (global::EggLink.DanhengServer.Proto.RogueTournDoorInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.RogueTournDoorInfo;
      }
    }

    /// <summary>Field number for the "rogue_tourn_workbench_info" field.</summary>
    public const int RogueTournWorkbenchInfoFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo RogueTournWorkbenchInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo ? (global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.RogueTournWorkbenchInfo;
      }
    }

    /// <summary>Field number for the "rogue_gamble_machine_info" field.</summary>
    public const int RogueGambleMachineInfoFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo RogueGambleMachineInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo ? (global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.RogueGambleMachineInfo;
      }
    }

    /// <summary>Field number for the "rogue_curse_chest_info" field.</summary>
    public const int RogueCurseChestInfoFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueCurseChestInfo RogueCurseChestInfo {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo ? (global::EggLink.DanhengServer.Proto.RogueCurseChestInfo) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.RogueCurseChestInfo;
      }
    }

    private object infoOneofCase_;
    /// <summary>Enum of possible cases for the "InfoOneofCase" oneof.</summary>
    public enum InfoOneofCaseOneofCase {
      None = 0,
      RogueInfo = 14,
      AeonInfo = 9,
      ChessRogueInfo = 3,
      RogueTournDoorInfo = 11,
      RogueTournWorkbenchInfo = 5,
      RogueGambleMachineInfo = 6,
      RogueCurseChestInfo = 4,
    }
    private InfoOneofCaseOneofCase infoOneofCaseCase_ = InfoOneofCaseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoOneofCaseOneofCase InfoOneofCaseCase {
      get { return infoOneofCaseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfoOneofCase() {
      infoOneofCaseCase_ = InfoOneofCaseOneofCase.None;
      infoOneofCase_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropExtraInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropExtraInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RogueInfo, other.RogueInfo)) return false;
      if (!object.Equals(AeonInfo, other.AeonInfo)) return false;
      if (!object.Equals(ChessRogueInfo, other.ChessRogueInfo)) return false;
      if (!object.Equals(RogueTournDoorInfo, other.RogueTournDoorInfo)) return false;
      if (!object.Equals(RogueTournWorkbenchInfo, other.RogueTournWorkbenchInfo)) return false;
      if (!object.Equals(RogueGambleMachineInfo, other.RogueGambleMachineInfo)) return false;
      if (!object.Equals(RogueCurseChestInfo, other.RogueCurseChestInfo)) return false;
      if (InfoOneofCaseCase != other.InfoOneofCaseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo) hash ^= RogueInfo.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo) hash ^= AeonInfo.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo) hash ^= ChessRogueInfo.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo) hash ^= RogueTournDoorInfo.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo) hash ^= RogueTournWorkbenchInfo.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo) hash ^= RogueGambleMachineInfo.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo) hash ^= RogueCurseChestInfo.GetHashCode();
      hash ^= (int) infoOneofCaseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(ChessRogueInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(RogueCurseChestInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo) {
        output.WriteRawTag(42);
        output.WriteMessage(RogueTournWorkbenchInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(RogueGambleMachineInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo) {
        output.WriteRawTag(74);
        output.WriteMessage(AeonInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo) {
        output.WriteRawTag(90);
        output.WriteMessage(RogueTournDoorInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo) {
        output.WriteRawTag(114);
        output.WriteMessage(RogueInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(ChessRogueInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(RogueCurseChestInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo) {
        output.WriteRawTag(42);
        output.WriteMessage(RogueTournWorkbenchInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(RogueGambleMachineInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo) {
        output.WriteRawTag(74);
        output.WriteMessage(AeonInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo) {
        output.WriteRawTag(90);
        output.WriteMessage(RogueTournDoorInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo) {
        output.WriteRawTag(114);
        output.WriteMessage(RogueInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AeonInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChessRogueInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueTournDoorInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueTournWorkbenchInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueGambleMachineInfo);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueCurseChestInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropExtraInfo other) {
      if (other == null) {
        return;
      }
      switch (other.InfoOneofCaseCase) {
        case InfoOneofCaseOneofCase.RogueInfo:
          if (RogueInfo == null) {
            RogueInfo = new global::EggLink.DanhengServer.Proto.PropRogueInfo();
          }
          RogueInfo.MergeFrom(other.RogueInfo);
          break;
        case InfoOneofCaseOneofCase.AeonInfo:
          if (AeonInfo == null) {
            AeonInfo = new global::EggLink.DanhengServer.Proto.PropAeonInfo();
          }
          AeonInfo.MergeFrom(other.AeonInfo);
          break;
        case InfoOneofCaseOneofCase.ChessRogueInfo:
          if (ChessRogueInfo == null) {
            ChessRogueInfo = new global::EggLink.DanhengServer.Proto.PropChessRogueInfo();
          }
          ChessRogueInfo.MergeFrom(other.ChessRogueInfo);
          break;
        case InfoOneofCaseOneofCase.RogueTournDoorInfo:
          if (RogueTournDoorInfo == null) {
            RogueTournDoorInfo = new global::EggLink.DanhengServer.Proto.RogueTournDoorInfo();
          }
          RogueTournDoorInfo.MergeFrom(other.RogueTournDoorInfo);
          break;
        case InfoOneofCaseOneofCase.RogueTournWorkbenchInfo:
          if (RogueTournWorkbenchInfo == null) {
            RogueTournWorkbenchInfo = new global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo();
          }
          RogueTournWorkbenchInfo.MergeFrom(other.RogueTournWorkbenchInfo);
          break;
        case InfoOneofCaseOneofCase.RogueGambleMachineInfo:
          if (RogueGambleMachineInfo == null) {
            RogueGambleMachineInfo = new global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo();
          }
          RogueGambleMachineInfo.MergeFrom(other.RogueGambleMachineInfo);
          break;
        case InfoOneofCaseOneofCase.RogueCurseChestInfo:
          if (RogueCurseChestInfo == null) {
            RogueCurseChestInfo = new global::EggLink.DanhengServer.Proto.RogueCurseChestInfo();
          }
          RogueCurseChestInfo.MergeFrom(other.RogueCurseChestInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            global::EggLink.DanhengServer.Proto.PropChessRogueInfo subBuilder = new global::EggLink.DanhengServer.Proto.PropChessRogueInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo) {
              subBuilder.MergeFrom(ChessRogueInfo);
            }
            input.ReadMessage(subBuilder);
            ChessRogueInfo = subBuilder;
            break;
          }
          case 34: {
            global::EggLink.DanhengServer.Proto.RogueCurseChestInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueCurseChestInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo) {
              subBuilder.MergeFrom(RogueCurseChestInfo);
            }
            input.ReadMessage(subBuilder);
            RogueCurseChestInfo = subBuilder;
            break;
          }
          case 42: {
            global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo) {
              subBuilder.MergeFrom(RogueTournWorkbenchInfo);
            }
            input.ReadMessage(subBuilder);
            RogueTournWorkbenchInfo = subBuilder;
            break;
          }
          case 50: {
            global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo) {
              subBuilder.MergeFrom(RogueGambleMachineInfo);
            }
            input.ReadMessage(subBuilder);
            RogueGambleMachineInfo = subBuilder;
            break;
          }
          case 74: {
            global::EggLink.DanhengServer.Proto.PropAeonInfo subBuilder = new global::EggLink.DanhengServer.Proto.PropAeonInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo) {
              subBuilder.MergeFrom(AeonInfo);
            }
            input.ReadMessage(subBuilder);
            AeonInfo = subBuilder;
            break;
          }
          case 90: {
            global::EggLink.DanhengServer.Proto.RogueTournDoorInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueTournDoorInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo) {
              subBuilder.MergeFrom(RogueTournDoorInfo);
            }
            input.ReadMessage(subBuilder);
            RogueTournDoorInfo = subBuilder;
            break;
          }
          case 114: {
            global::EggLink.DanhengServer.Proto.PropRogueInfo subBuilder = new global::EggLink.DanhengServer.Proto.PropRogueInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo) {
              subBuilder.MergeFrom(RogueInfo);
            }
            input.ReadMessage(subBuilder);
            RogueInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            global::EggLink.DanhengServer.Proto.PropChessRogueInfo subBuilder = new global::EggLink.DanhengServer.Proto.PropChessRogueInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.ChessRogueInfo) {
              subBuilder.MergeFrom(ChessRogueInfo);
            }
            input.ReadMessage(subBuilder);
            ChessRogueInfo = subBuilder;
            break;
          }
          case 34: {
            global::EggLink.DanhengServer.Proto.RogueCurseChestInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueCurseChestInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueCurseChestInfo) {
              subBuilder.MergeFrom(RogueCurseChestInfo);
            }
            input.ReadMessage(subBuilder);
            RogueCurseChestInfo = subBuilder;
            break;
          }
          case 42: {
            global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueTournWorkbenchInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournWorkbenchInfo) {
              subBuilder.MergeFrom(RogueTournWorkbenchInfo);
            }
            input.ReadMessage(subBuilder);
            RogueTournWorkbenchInfo = subBuilder;
            break;
          }
          case 50: {
            global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueGambleMachineInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueGambleMachineInfo) {
              subBuilder.MergeFrom(RogueGambleMachineInfo);
            }
            input.ReadMessage(subBuilder);
            RogueGambleMachineInfo = subBuilder;
            break;
          }
          case 74: {
            global::EggLink.DanhengServer.Proto.PropAeonInfo subBuilder = new global::EggLink.DanhengServer.Proto.PropAeonInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.AeonInfo) {
              subBuilder.MergeFrom(AeonInfo);
            }
            input.ReadMessage(subBuilder);
            AeonInfo = subBuilder;
            break;
          }
          case 90: {
            global::EggLink.DanhengServer.Proto.RogueTournDoorInfo subBuilder = new global::EggLink.DanhengServer.Proto.RogueTournDoorInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueTournDoorInfo) {
              subBuilder.MergeFrom(RogueTournDoorInfo);
            }
            input.ReadMessage(subBuilder);
            RogueTournDoorInfo = subBuilder;
            break;
          }
          case 114: {
            global::EggLink.DanhengServer.Proto.PropRogueInfo subBuilder = new global::EggLink.DanhengServer.Proto.PropRogueInfo();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.RogueInfo) {
              subBuilder.MergeFrom(RogueInfo);
            }
            input.ReadMessage(subBuilder);
            RogueInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
