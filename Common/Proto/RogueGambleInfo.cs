// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RogueGambleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from RogueGambleInfo.proto</summary>
  public static partial class RogueGambleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RogueGambleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RogueGambleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVSb2d1ZUdhbWJsZUluZm8ucHJvdG8aEkl0ZW1Db3N0RGF0YS5wcm90bxoe",
            "Um9ndWVHYW1ibGVNYXplR3JvdXBJbmZvLnByb3RvItIBCg9Sb2d1ZUdhbWJs",
            "ZUluZm8SEwoLQUxCTEpNT0JNQUMYDyABKA0SEwoLS01BQVBCRk1PRUMYDCAB",
            "KA0SEQoJY3VyX3RpbWVzGAUgASgNEjIKD21hemVfZ3JvdXBfbGlzdBgEIAMo",
            "CzIZLlJvZ3VlR2FtYmxlTWF6ZUdyb3VwSW5mbxIQCghjYW5fcGxheRgJIAEo",
            "CBIkCg1jdXJfY29zdF9pdGVtGA4gASgLMg0uSXRlbUNvc3REYXRhEhYKDm1h",
            "eF9nYW1lX3RpbWVzGAMgASgNQh6qAhtFZ2dMaW5rLkRhbmhlbmdTZXJ2ZXIu",
            "UHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ItemCostDataReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueGambleMazeGroupInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.RogueGambleInfo), global::EggLink.DanhengServer.Proto.RogueGambleInfo.Parser, new[]{ "ALBLJMOBMAC", "KMAAPBFMOEC", "CurTimes", "MazeGroupList", "CanPlay", "CurCostItem", "MaxGameTimes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RogueGambleInfo : pb::IMessage<RogueGambleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RogueGambleInfo> _parser = new pb::MessageParser<RogueGambleInfo>(() => new RogueGambleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RogueGambleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.RogueGambleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueGambleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueGambleInfo(RogueGambleInfo other) : this() {
      aLBLJMOBMAC_ = other.aLBLJMOBMAC_;
      kMAAPBFMOEC_ = other.kMAAPBFMOEC_;
      curTimes_ = other.curTimes_;
      mazeGroupList_ = other.mazeGroupList_.Clone();
      canPlay_ = other.canPlay_;
      curCostItem_ = other.curCostItem_ != null ? other.curCostItem_.Clone() : null;
      maxGameTimes_ = other.maxGameTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueGambleInfo Clone() {
      return new RogueGambleInfo(this);
    }

    /// <summary>Field number for the "ALBLJMOBMAC" field.</summary>
    public const int ALBLJMOBMACFieldNumber = 15;
    private uint aLBLJMOBMAC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ALBLJMOBMAC {
      get { return aLBLJMOBMAC_; }
      set {
        aLBLJMOBMAC_ = value;
      }
    }

    /// <summary>Field number for the "KMAAPBFMOEC" field.</summary>
    public const int KMAAPBFMOECFieldNumber = 12;
    private uint kMAAPBFMOEC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KMAAPBFMOEC {
      get { return kMAAPBFMOEC_; }
      set {
        kMAAPBFMOEC_ = value;
      }
    }

    /// <summary>Field number for the "cur_times" field.</summary>
    public const int CurTimesFieldNumber = 5;
    private uint curTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurTimes {
      get { return curTimes_; }
      set {
        curTimes_ = value;
      }
    }

    /// <summary>Field number for the "maze_group_list" field.</summary>
    public const int MazeGroupListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.RogueGambleMazeGroupInfo> _repeated_mazeGroupList_codec
        = pb::FieldCodec.ForMessage(34, global::EggLink.DanhengServer.Proto.RogueGambleMazeGroupInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueGambleMazeGroupInfo> mazeGroupList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueGambleMazeGroupInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueGambleMazeGroupInfo> MazeGroupList {
      get { return mazeGroupList_; }
    }

    /// <summary>Field number for the "can_play" field.</summary>
    public const int CanPlayFieldNumber = 9;
    private bool canPlay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanPlay {
      get { return canPlay_; }
      set {
        canPlay_ = value;
      }
    }

    /// <summary>Field number for the "cur_cost_item" field.</summary>
    public const int CurCostItemFieldNumber = 14;
    private global::EggLink.DanhengServer.Proto.ItemCostData curCostItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemCostData CurCostItem {
      get { return curCostItem_; }
      set {
        curCostItem_ = value;
      }
    }

    /// <summary>Field number for the "max_game_times" field.</summary>
    public const int MaxGameTimesFieldNumber = 3;
    private uint maxGameTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxGameTimes {
      get { return maxGameTimes_; }
      set {
        maxGameTimes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RogueGambleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RogueGambleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ALBLJMOBMAC != other.ALBLJMOBMAC) return false;
      if (KMAAPBFMOEC != other.KMAAPBFMOEC) return false;
      if (CurTimes != other.CurTimes) return false;
      if(!mazeGroupList_.Equals(other.mazeGroupList_)) return false;
      if (CanPlay != other.CanPlay) return false;
      if (!object.Equals(CurCostItem, other.CurCostItem)) return false;
      if (MaxGameTimes != other.MaxGameTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ALBLJMOBMAC != 0) hash ^= ALBLJMOBMAC.GetHashCode();
      if (KMAAPBFMOEC != 0) hash ^= KMAAPBFMOEC.GetHashCode();
      if (CurTimes != 0) hash ^= CurTimes.GetHashCode();
      hash ^= mazeGroupList_.GetHashCode();
      if (CanPlay != false) hash ^= CanPlay.GetHashCode();
      if (curCostItem_ != null) hash ^= CurCostItem.GetHashCode();
      if (MaxGameTimes != 0) hash ^= MaxGameTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxGameTimes != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxGameTimes);
      }
      mazeGroupList_.WriteTo(output, _repeated_mazeGroupList_codec);
      if (CurTimes != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CurTimes);
      }
      if (CanPlay != false) {
        output.WriteRawTag(72);
        output.WriteBool(CanPlay);
      }
      if (KMAAPBFMOEC != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(KMAAPBFMOEC);
      }
      if (curCostItem_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CurCostItem);
      }
      if (ALBLJMOBMAC != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ALBLJMOBMAC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxGameTimes != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxGameTimes);
      }
      mazeGroupList_.WriteTo(ref output, _repeated_mazeGroupList_codec);
      if (CurTimes != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CurTimes);
      }
      if (CanPlay != false) {
        output.WriteRawTag(72);
        output.WriteBool(CanPlay);
      }
      if (KMAAPBFMOEC != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(KMAAPBFMOEC);
      }
      if (curCostItem_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CurCostItem);
      }
      if (ALBLJMOBMAC != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ALBLJMOBMAC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ALBLJMOBMAC != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ALBLJMOBMAC);
      }
      if (KMAAPBFMOEC != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KMAAPBFMOEC);
      }
      if (CurTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurTimes);
      }
      size += mazeGroupList_.CalculateSize(_repeated_mazeGroupList_codec);
      if (CanPlay != false) {
        size += 1 + 1;
      }
      if (curCostItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurCostItem);
      }
      if (MaxGameTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxGameTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RogueGambleInfo other) {
      if (other == null) {
        return;
      }
      if (other.ALBLJMOBMAC != 0) {
        ALBLJMOBMAC = other.ALBLJMOBMAC;
      }
      if (other.KMAAPBFMOEC != 0) {
        KMAAPBFMOEC = other.KMAAPBFMOEC;
      }
      if (other.CurTimes != 0) {
        CurTimes = other.CurTimes;
      }
      mazeGroupList_.Add(other.mazeGroupList_);
      if (other.CanPlay != false) {
        CanPlay = other.CanPlay;
      }
      if (other.curCostItem_ != null) {
        if (curCostItem_ == null) {
          CurCostItem = new global::EggLink.DanhengServer.Proto.ItemCostData();
        }
        CurCostItem.MergeFrom(other.CurCostItem);
      }
      if (other.MaxGameTimes != 0) {
        MaxGameTimes = other.MaxGameTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            MaxGameTimes = input.ReadUInt32();
            break;
          }
          case 34: {
            mazeGroupList_.AddEntriesFrom(input, _repeated_mazeGroupList_codec);
            break;
          }
          case 40: {
            CurTimes = input.ReadUInt32();
            break;
          }
          case 72: {
            CanPlay = input.ReadBool();
            break;
          }
          case 96: {
            KMAAPBFMOEC = input.ReadUInt32();
            break;
          }
          case 114: {
            if (curCostItem_ == null) {
              CurCostItem = new global::EggLink.DanhengServer.Proto.ItemCostData();
            }
            input.ReadMessage(CurCostItem);
            break;
          }
          case 120: {
            ALBLJMOBMAC = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            MaxGameTimes = input.ReadUInt32();
            break;
          }
          case 34: {
            mazeGroupList_.AddEntriesFrom(ref input, _repeated_mazeGroupList_codec);
            break;
          }
          case 40: {
            CurTimes = input.ReadUInt32();
            break;
          }
          case 72: {
            CanPlay = input.ReadBool();
            break;
          }
          case 96: {
            KMAAPBFMOEC = input.ReadUInt32();
            break;
          }
          case 114: {
            if (curCostItem_ == null) {
              CurCostItem = new global::EggLink.DanhengServer.Proto.ItemCostData();
            }
            input.ReadMessage(CurCostItem);
            break;
          }
          case 120: {
            ALBLJMOBMAC = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
